package net.minecraft.stats;

import net.minecraft.block.Block;
import net.minecraft.entity.EntityType;
import net.minecraft.item.Item;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.registry.Registry;

public class Stats {
   public static final StatType<Block> BLOCK_MINED;
   public static final StatType<Item> ITEM_CRAFTED;
   public static final StatType<Item> ITEM_USED;
   public static final StatType<Item> ITEM_BROKEN;
   public static final StatType<Item> ITEM_PICKED_UP;
   public static final StatType<Item> ITEM_DROPPED;
   public static final StatType<EntityType<?>> ENTITY_KILLED;
   public static final StatType<EntityType<?>> ENTITY_KILLED_BY;
   public static final StatType<ResourceLocation> CUSTOM;
   public static final ResourceLocation LEAVE_GAME;
   public static final ResourceLocation PLAY_ONE_MINUTE;
   public static final ResourceLocation TIME_SINCE_DEATH;
   public static final ResourceLocation TIME_SINCE_REST;
   public static final ResourceLocation field_226147_n_;
   public static final ResourceLocation WALK_ONE_CM;
   public static final ResourceLocation CROUCH_ONE_CM;
   public static final ResourceLocation SPRINT_ONE_CM;
   public static final ResourceLocation WALK_ON_WATER_ONE_CM;
   public static final ResourceLocation FALL_ONE_CM;
   public static final ResourceLocation CLIMB_ONE_CM;
   public static final ResourceLocation FLY_ONE_CM;
   public static final ResourceLocation WALK_UNDER_WATER_ONE_CM;
   public static final ResourceLocation MINECART_ONE_CM;
   public static final ResourceLocation BOAT_ONE_CM;
   public static final ResourceLocation PIG_ONE_CM;
   public static final ResourceLocation HORSE_ONE_CM;
   public static final ResourceLocation AVIATE_ONE_CM;
   public static final ResourceLocation SWIM_ONE_CM;
   public static final ResourceLocation JUMP;
   public static final ResourceLocation DROP;
   public static final ResourceLocation DAMAGE_DEALT;
   public static final ResourceLocation DAMAGE_DEALT_ABSORBED;
   public static final ResourceLocation DAMAGE_DEALT_RESISTED;
   public static final ResourceLocation DAMAGE_TAKEN;
   public static final ResourceLocation DAMAGE_BLOCKED_BY_SHIELD;
   public static final ResourceLocation DAMAGE_ABSORBED;
   public static final ResourceLocation DAMAGE_RESISTED;
   public static final ResourceLocation DEATHS;
   public static final ResourceLocation MOB_KILLS;
   public static final ResourceLocation ANIMALS_BRED;
   public static final ResourceLocation PLAYER_KILLS;
   public static final ResourceLocation FISH_CAUGHT;
   public static final ResourceLocation TALKED_TO_VILLAGER;
   public static final ResourceLocation TRADED_WITH_VILLAGER;
   public static final ResourceLocation EAT_CAKE_SLICE;
   public static final ResourceLocation FILL_CAULDRON;
   public static final ResourceLocation USE_CAULDRON;
   public static final ResourceLocation CLEAN_ARMOR;
   public static final ResourceLocation CLEAN_BANNER;
   public static final ResourceLocation CLEAN_SHULKER_BOX;
   public static final ResourceLocation INTERACT_WITH_BREWINGSTAND;
   public static final ResourceLocation INTERACT_WITH_BEACON;
   public static final ResourceLocation INSPECT_DROPPER;
   public static final ResourceLocation INSPECT_HOPPER;
   public static final ResourceLocation INSPECT_DISPENSER;
   public static final ResourceLocation PLAY_NOTEBLOCK;
   public static final ResourceLocation TUNE_NOTEBLOCK;
   public static final ResourceLocation POT_FLOWER;
   public static final ResourceLocation TRIGGER_TRAPPED_CHEST;
   public static final ResourceLocation OPEN_ENDERCHEST;
   public static final ResourceLocation ENCHANT_ITEM;
   public static final ResourceLocation PLAY_RECORD;
   public static final ResourceLocation INTERACT_WITH_FURNACE;
   public static final ResourceLocation INTERACT_WITH_CRAFTING_TABLE;
   public static final ResourceLocation OPEN_CHEST;
   public static final ResourceLocation SLEEP_IN_BED;
   public static final ResourceLocation OPEN_SHULKER_BOX;
   public static final ResourceLocation OPEN_BARREL;
   public static final ResourceLocation INTERACT_WITH_BLAST_FURNACE;
   public static final ResourceLocation INTERACT_WITH_SMOKER;
   public static final ResourceLocation INTERACT_WITH_LECTERN;
   public static final ResourceLocation INTERACT_WITH_CAMPFIRE;
   public static final ResourceLocation INTERACT_WITH_CARTOGRAPHY_TABLE;
   public static final ResourceLocation INTERACT_WITH_LOOM;
   public static final ResourceLocation INTERACT_WITH_STONECUTTER;
   public static final ResourceLocation BELL_RING;
   public static final ResourceLocation RAID_TRIGGER;
   public static final ResourceLocation RAID_WIN;
   public static final ResourceLocation field_226145_aA_;
   public static final ResourceLocation field_226146_aB_;

   private static ResourceLocation registerCustom(String p_199084_0_, IStatFormatter p_199084_1_) {
      ResourceLocation lvt_2_1_ = new ResourceLocation(p_199084_0_);
      Registry.register((Registry)Registry.CUSTOM_STAT, (String)p_199084_0_, (Object)lvt_2_1_);
      CUSTOM.get(lvt_2_1_, p_199084_1_);
      return lvt_2_1_;
   }

   private static <T> StatType<T> registerType(String p_199085_0_, Registry<T> p_199085_1_) {
      return (StatType)Registry.register((Registry)Registry.STATS, (String)p_199085_0_, (Object)(new StatType(p_199085_1_)));
   }

   static {
      BLOCK_MINED = registerType("mined", Registry.BLOCK);
      ITEM_CRAFTED = registerType("crafted", Registry.ITEM);
      ITEM_USED = registerType("used", Registry.ITEM);
      ITEM_BROKEN = registerType("broken", Registry.ITEM);
      ITEM_PICKED_UP = registerType("picked_up", Registry.ITEM);
      ITEM_DROPPED = registerType("dropped", Registry.ITEM);
      ENTITY_KILLED = registerType("killed", Registry.ENTITY_TYPE);
      ENTITY_KILLED_BY = registerType("killed_by", Registry.ENTITY_TYPE);
      CUSTOM = registerType("custom", Registry.CUSTOM_STAT);
      LEAVE_GAME = registerCustom("leave_game", IStatFormatter.DEFAULT);
      PLAY_ONE_MINUTE = registerCustom("play_one_minute", IStatFormatter.TIME);
      TIME_SINCE_DEATH = registerCustom("time_since_death", IStatFormatter.TIME);
      TIME_SINCE_REST = registerCustom("time_since_rest", IStatFormatter.TIME);
      field_226147_n_ = registerCustom("sneak_time", IStatFormatter.TIME);
      WALK_ONE_CM = registerCustom("walk_one_cm", IStatFormatter.DISTANCE);
      CROUCH_ONE_CM = registerCustom("crouch_one_cm", IStatFormatter.DISTANCE);
      SPRINT_ONE_CM = registerCustom("sprint_one_cm", IStatFormatter.DISTANCE);
      WALK_ON_WATER_ONE_CM = registerCustom("walk_on_water_one_cm", IStatFormatter.DISTANCE);
      FALL_ONE_CM = registerCustom("fall_one_cm", IStatFormatter.DISTANCE);
      CLIMB_ONE_CM = registerCustom("climb_one_cm", IStatFormatter.DISTANCE);
      FLY_ONE_CM = registerCustom("fly_one_cm", IStatFormatter.DISTANCE);
      WALK_UNDER_WATER_ONE_CM = registerCustom("walk_under_water_one_cm", IStatFormatter.DISTANCE);
      MINECART_ONE_CM = registerCustom("minecart_one_cm", IStatFormatter.DISTANCE);
      BOAT_ONE_CM = registerCustom("boat_one_cm", IStatFormatter.DISTANCE);
      PIG_ONE_CM = registerCustom("pig_one_cm", IStatFormatter.DISTANCE);
      HORSE_ONE_CM = registerCustom("horse_one_cm", IStatFormatter.DISTANCE);
      AVIATE_ONE_CM = registerCustom("aviate_one_cm", IStatFormatter.DISTANCE);
      SWIM_ONE_CM = registerCustom("swim_one_cm", IStatFormatter.DISTANCE);
      JUMP = registerCustom("jump", IStatFormatter.DEFAULT);
      DROP = registerCustom("drop", IStatFormatter.DEFAULT);
      DAMAGE_DEALT = registerCustom("damage_dealt", IStatFormatter.DIVIDE_BY_TEN);
      DAMAGE_DEALT_ABSORBED = registerCustom("damage_dealt_absorbed", IStatFormatter.DIVIDE_BY_TEN);
      DAMAGE_DEALT_RESISTED = registerCustom("damage_dealt_resisted", IStatFormatter.DIVIDE_BY_TEN);
      DAMAGE_TAKEN = registerCustom("damage_taken", IStatFormatter.DIVIDE_BY_TEN);
      DAMAGE_BLOCKED_BY_SHIELD = registerCustom("damage_blocked_by_shield", IStatFormatter.DIVIDE_BY_TEN);
      DAMAGE_ABSORBED = registerCustom("damage_absorbed", IStatFormatter.DIVIDE_BY_TEN);
      DAMAGE_RESISTED = registerCustom("damage_resisted", IStatFormatter.DIVIDE_BY_TEN);
      DEATHS = registerCustom("deaths", IStatFormatter.DEFAULT);
      MOB_KILLS = registerCustom("mob_kills", IStatFormatter.DEFAULT);
      ANIMALS_BRED = registerCustom("animals_bred", IStatFormatter.DEFAULT);
      PLAYER_KILLS = registerCustom("player_kills", IStatFormatter.DEFAULT);
      FISH_CAUGHT = registerCustom("fish_caught", IStatFormatter.DEFAULT);
      TALKED_TO_VILLAGER = registerCustom("talked_to_villager", IStatFormatter.DEFAULT);
      TRADED_WITH_VILLAGER = registerCustom("traded_with_villager", IStatFormatter.DEFAULT);
      EAT_CAKE_SLICE = registerCustom("eat_cake_slice", IStatFormatter.DEFAULT);
      FILL_CAULDRON = registerCustom("fill_cauldron", IStatFormatter.DEFAULT);
      USE_CAULDRON = registerCustom("use_cauldron", IStatFormatter.DEFAULT);
      CLEAN_ARMOR = registerCustom("clean_armor", IStatFormatter.DEFAULT);
      CLEAN_BANNER = registerCustom("clean_banner", IStatFormatter.DEFAULT);
      CLEAN_SHULKER_BOX = registerCustom("clean_shulker_box", IStatFormatter.DEFAULT);
      INTERACT_WITH_BREWINGSTAND = registerCustom("interact_with_brewingstand", IStatFormatter.DEFAULT);
      INTERACT_WITH_BEACON = registerCustom("interact_with_beacon", IStatFormatter.DEFAULT);
      INSPECT_DROPPER = registerCustom("inspect_dropper", IStatFormatter.DEFAULT);
      INSPECT_HOPPER = registerCustom("inspect_hopper", IStatFormatter.DEFAULT);
      INSPECT_DISPENSER = registerCustom("inspect_dispenser", IStatFormatter.DEFAULT);
      PLAY_NOTEBLOCK = registerCustom("play_noteblock", IStatFormatter.DEFAULT);
      TUNE_NOTEBLOCK = registerCustom("tune_noteblock", IStatFormatter.DEFAULT);
      POT_FLOWER = registerCustom("pot_flower", IStatFormatter.DEFAULT);
      TRIGGER_TRAPPED_CHEST = registerCustom("trigger_trapped_chest", IStatFormatter.DEFAULT);
      OPEN_ENDERCHEST = registerCustom("open_enderchest", IStatFormatter.DEFAULT);
      ENCHANT_ITEM = registerCustom("enchant_item", IStatFormatter.DEFAULT);
      PLAY_RECORD = registerCustom("play_record", IStatFormatter.DEFAULT);
      INTERACT_WITH_FURNACE = registerCustom("interact_with_furnace", IStatFormatter.DEFAULT);
      INTERACT_WITH_CRAFTING_TABLE = registerCustom("interact_with_crafting_table", IStatFormatter.DEFAULT);
      OPEN_CHEST = registerCustom("open_chest", IStatFormatter.DEFAULT);
      SLEEP_IN_BED = registerCustom("sleep_in_bed", IStatFormatter.DEFAULT);
      OPEN_SHULKER_BOX = registerCustom("open_shulker_box", IStatFormatter.DEFAULT);
      OPEN_BARREL = registerCustom("open_barrel", IStatFormatter.DEFAULT);
      INTERACT_WITH_BLAST_FURNACE = registerCustom("interact_with_blast_furnace", IStatFormatter.DEFAULT);
      INTERACT_WITH_SMOKER = registerCustom("interact_with_smoker", IStatFormatter.DEFAULT);
      INTERACT_WITH_LECTERN = registerCustom("interact_with_lectern", IStatFormatter.DEFAULT);
      INTERACT_WITH_CAMPFIRE = registerCustom("interact_with_campfire", IStatFormatter.DEFAULT);
      INTERACT_WITH_CARTOGRAPHY_TABLE = registerCustom("interact_with_cartography_table", IStatFormatter.DEFAULT);
      INTERACT_WITH_LOOM = registerCustom("interact_with_loom", IStatFormatter.DEFAULT);
      INTERACT_WITH_STONECUTTER = registerCustom("interact_with_stonecutter", IStatFormatter.DEFAULT);
      BELL_RING = registerCustom("bell_ring", IStatFormatter.DEFAULT);
      RAID_TRIGGER = registerCustom("raid_trigger", IStatFormatter.DEFAULT);
      RAID_WIN = registerCustom("raid_win", IStatFormatter.DEFAULT);
      field_226145_aA_ = registerCustom("interact_with_anvil", IStatFormatter.DEFAULT);
      field_226146_aB_ = registerCustom("interact_with_grindstone", IStatFormatter.DEFAULT);
   }
}
