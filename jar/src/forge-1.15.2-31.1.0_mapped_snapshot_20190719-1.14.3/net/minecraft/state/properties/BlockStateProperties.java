package net.minecraft.state.properties;

import java.util.function.Predicate;
import net.minecraft.state.BooleanProperty;
import net.minecraft.state.DirectionProperty;
import net.minecraft.state.EnumProperty;
import net.minecraft.state.IntegerProperty;
import net.minecraft.util.Direction;

public class BlockStateProperties {
   public static final BooleanProperty ATTACHED = BooleanProperty.create("attached");
   public static final BooleanProperty BOTTOM = BooleanProperty.create("bottom");
   public static final BooleanProperty CONDITIONAL = BooleanProperty.create("conditional");
   public static final BooleanProperty DISARMED = BooleanProperty.create("disarmed");
   public static final BooleanProperty DRAG = BooleanProperty.create("drag");
   public static final BooleanProperty ENABLED = BooleanProperty.create("enabled");
   public static final BooleanProperty EXTENDED = BooleanProperty.create("extended");
   public static final BooleanProperty EYE = BooleanProperty.create("eye");
   public static final BooleanProperty FALLING = BooleanProperty.create("falling");
   public static final BooleanProperty HANGING = BooleanProperty.create("hanging");
   public static final BooleanProperty HAS_BOTTLE_0 = BooleanProperty.create("has_bottle_0");
   public static final BooleanProperty HAS_BOTTLE_1 = BooleanProperty.create("has_bottle_1");
   public static final BooleanProperty HAS_BOTTLE_2 = BooleanProperty.create("has_bottle_2");
   public static final BooleanProperty HAS_RECORD = BooleanProperty.create("has_record");
   public static final BooleanProperty HAS_BOOK = BooleanProperty.create("has_book");
   public static final BooleanProperty INVERTED = BooleanProperty.create("inverted");
   public static final BooleanProperty IN_WALL = BooleanProperty.create("in_wall");
   public static final BooleanProperty LIT = BooleanProperty.create("lit");
   public static final BooleanProperty LOCKED = BooleanProperty.create("locked");
   public static final BooleanProperty OCCUPIED = BooleanProperty.create("occupied");
   public static final BooleanProperty OPEN = BooleanProperty.create("open");
   public static final BooleanProperty PERSISTENT = BooleanProperty.create("persistent");
   public static final BooleanProperty POWERED = BooleanProperty.create("powered");
   public static final BooleanProperty SHORT = BooleanProperty.create("short");
   public static final BooleanProperty SIGNAL_FIRE = BooleanProperty.create("signal_fire");
   public static final BooleanProperty SNOWY = BooleanProperty.create("snowy");
   public static final BooleanProperty TRIGGERED = BooleanProperty.create("triggered");
   public static final BooleanProperty UNSTABLE = BooleanProperty.create("unstable");
   public static final BooleanProperty WATERLOGGED = BooleanProperty.create("waterlogged");
   public static final EnumProperty<Direction.Axis> HORIZONTAL_AXIS;
   public static final EnumProperty<Direction.Axis> AXIS;
   public static final BooleanProperty UP;
   public static final BooleanProperty DOWN;
   public static final BooleanProperty NORTH;
   public static final BooleanProperty EAST;
   public static final BooleanProperty SOUTH;
   public static final BooleanProperty WEST;
   public static final DirectionProperty FACING;
   public static final DirectionProperty FACING_EXCEPT_UP;
   public static final DirectionProperty HORIZONTAL_FACING;
   public static final EnumProperty<AttachFace> FACE;
   public static final EnumProperty<BellAttachment> BELL_ATTACHMENT;
   public static final EnumProperty<RedstoneSide> REDSTONE_EAST;
   public static final EnumProperty<RedstoneSide> REDSTONE_NORTH;
   public static final EnumProperty<RedstoneSide> REDSTONE_SOUTH;
   public static final EnumProperty<RedstoneSide> REDSTONE_WEST;
   public static final EnumProperty<DoubleBlockHalf> DOUBLE_BLOCK_HALF;
   public static final EnumProperty<Half> HALF;
   public static final EnumProperty<RailShape> RAIL_SHAPE;
   public static final EnumProperty<RailShape> RAIL_SHAPE_STRAIGHT;
   public static final IntegerProperty AGE_0_1;
   public static final IntegerProperty AGE_0_2;
   public static final IntegerProperty AGE_0_3;
   public static final IntegerProperty AGE_0_5;
   public static final IntegerProperty AGE_0_7;
   public static final IntegerProperty AGE_0_15;
   public static final IntegerProperty AGE_0_25;
   public static final IntegerProperty BITES_0_6;
   public static final IntegerProperty DELAY_1_4;
   public static final IntegerProperty DISTANCE_1_7;
   public static final IntegerProperty EGGS_1_4;
   public static final IntegerProperty HATCH_0_2;
   public static final IntegerProperty LAYERS_1_8;
   public static final IntegerProperty LEVEL_0_3;
   public static final IntegerProperty LEVEL_0_8;
   public static final IntegerProperty LEVEL_1_8;
   public static final IntegerProperty field_227036_ao_;
   public static final IntegerProperty LEVEL_0_15;
   public static final IntegerProperty MOISTURE_0_7;
   public static final IntegerProperty NOTE_0_24;
   public static final IntegerProperty PICKLES_1_4;
   public static final IntegerProperty POWER_0_15;
   public static final IntegerProperty STAGE_0_1;
   public static final IntegerProperty DISTANCE_0_7;
   public static final IntegerProperty ROTATION_0_15;
   public static final EnumProperty<BedPart> BED_PART;
   public static final EnumProperty<ChestType> CHEST_TYPE;
   public static final EnumProperty<ComparatorMode> COMPARATOR_MODE;
   public static final EnumProperty<DoorHingeSide> DOOR_HINGE;
   public static final EnumProperty<NoteBlockInstrument> NOTE_BLOCK_INSTRUMENT;
   public static final EnumProperty<PistonType> PISTON_TYPE;
   public static final EnumProperty<SlabType> SLAB_TYPE;
   public static final EnumProperty<StairsShape> STAIRS_SHAPE;
   public static final EnumProperty<StructureMode> STRUCTURE_BLOCK_MODE;
   public static final EnumProperty<BambooLeaves> BAMBOO_LEAVES;

   static {
      HORIZONTAL_AXIS = EnumProperty.create("axis", Direction.Axis.class, (Enum[])(Direction.Axis.X, Direction.Axis.Z));
      AXIS = EnumProperty.create("axis", Direction.Axis.class);
      UP = BooleanProperty.create("up");
      DOWN = BooleanProperty.create("down");
      NORTH = BooleanProperty.create("north");
      EAST = BooleanProperty.create("east");
      SOUTH = BooleanProperty.create("south");
      WEST = BooleanProperty.create("west");
      FACING = DirectionProperty.create("facing", Direction.NORTH, Direction.EAST, Direction.SOUTH, Direction.WEST, Direction.UP, Direction.DOWN);
      FACING_EXCEPT_UP = DirectionProperty.create("facing", (p_208125_0_) -> {
         return p_208125_0_ != Direction.UP;
      });
      HORIZONTAL_FACING = DirectionProperty.create("facing", (Predicate)Direction.Plane.HORIZONTAL);
      FACE = EnumProperty.create("face", AttachFace.class);
      BELL_ATTACHMENT = EnumProperty.create("attachment", BellAttachment.class);
      REDSTONE_EAST = EnumProperty.create("east", RedstoneSide.class);
      REDSTONE_NORTH = EnumProperty.create("north", RedstoneSide.class);
      REDSTONE_SOUTH = EnumProperty.create("south", RedstoneSide.class);
      REDSTONE_WEST = EnumProperty.create("west", RedstoneSide.class);
      DOUBLE_BLOCK_HALF = EnumProperty.create("half", DoubleBlockHalf.class);
      HALF = EnumProperty.create("half", Half.class);
      RAIL_SHAPE = EnumProperty.create("shape", RailShape.class);
      RAIL_SHAPE_STRAIGHT = EnumProperty.create("shape", RailShape.class, (p_210409_0_) -> {
         return p_210409_0_ != RailShape.NORTH_EAST && p_210409_0_ != RailShape.NORTH_WEST && p_210409_0_ != RailShape.SOUTH_EAST && p_210409_0_ != RailShape.SOUTH_WEST;
      });
      AGE_0_1 = IntegerProperty.create("age", 0, 1);
      AGE_0_2 = IntegerProperty.create("age", 0, 2);
      AGE_0_3 = IntegerProperty.create("age", 0, 3);
      AGE_0_5 = IntegerProperty.create("age", 0, 5);
      AGE_0_7 = IntegerProperty.create("age", 0, 7);
      AGE_0_15 = IntegerProperty.create("age", 0, 15);
      AGE_0_25 = IntegerProperty.create("age", 0, 25);
      BITES_0_6 = IntegerProperty.create("bites", 0, 6);
      DELAY_1_4 = IntegerProperty.create("delay", 1, 4);
      DISTANCE_1_7 = IntegerProperty.create("distance", 1, 7);
      EGGS_1_4 = IntegerProperty.create("eggs", 1, 4);
      HATCH_0_2 = IntegerProperty.create("hatch", 0, 2);
      LAYERS_1_8 = IntegerProperty.create("layers", 1, 8);
      LEVEL_0_3 = IntegerProperty.create("level", 0, 3);
      LEVEL_0_8 = IntegerProperty.create("level", 0, 8);
      LEVEL_1_8 = IntegerProperty.create("level", 1, 8);
      field_227036_ao_ = IntegerProperty.create("honey_level", 0, 5);
      LEVEL_0_15 = IntegerProperty.create("level", 0, 15);
      MOISTURE_0_7 = IntegerProperty.create("moisture", 0, 7);
      NOTE_0_24 = IntegerProperty.create("note", 0, 24);
      PICKLES_1_4 = IntegerProperty.create("pickles", 1, 4);
      POWER_0_15 = IntegerProperty.create("power", 0, 15);
      STAGE_0_1 = IntegerProperty.create("stage", 0, 1);
      DISTANCE_0_7 = IntegerProperty.create("distance", 0, 7);
      ROTATION_0_15 = IntegerProperty.create("rotation", 0, 15);
      BED_PART = EnumProperty.create("part", BedPart.class);
      CHEST_TYPE = EnumProperty.create("type", ChestType.class);
      COMPARATOR_MODE = EnumProperty.create("mode", ComparatorMode.class);
      DOOR_HINGE = EnumProperty.create("hinge", DoorHingeSide.class);
      NOTE_BLOCK_INSTRUMENT = EnumProperty.create("instrument", NoteBlockInstrument.class);
      PISTON_TYPE = EnumProperty.create("type", PistonType.class);
      SLAB_TYPE = EnumProperty.create("type", SlabType.class);
      STAIRS_SHAPE = EnumProperty.create("shape", StairsShape.class);
      STRUCTURE_BLOCK_MODE = EnumProperty.create("mode", StructureMode.class);
      BAMBOO_LEAVES = EnumProperty.create("leaves", BambooLeaves.class);
   }
}
