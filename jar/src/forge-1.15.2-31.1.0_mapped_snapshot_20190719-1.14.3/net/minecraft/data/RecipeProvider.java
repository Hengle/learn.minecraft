package net.minecraft.data;

import com.google.common.collect.Sets;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.util.Objects;
import java.util.Set;
import java.util.function.Consumer;
import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.ICriterionInstance;
import net.minecraft.advancements.criterion.EnterBlockTrigger;
import net.minecraft.advancements.criterion.ImpossibleTrigger;
import net.minecraft.advancements.criterion.InventoryChangeTrigger;
import net.minecraft.advancements.criterion.ItemPredicate;
import net.minecraft.advancements.criterion.MinMaxBounds;
import net.minecraft.advancements.criterion.StatePropertiesPredicate;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.Items;
import net.minecraft.item.crafting.CookingRecipeSerializer;
import net.minecraft.item.crafting.IRecipeSerializer;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.tags.ItemTags;
import net.minecraft.tags.Tag;
import net.minecraft.util.IItemProvider;
import net.minecraft.util.ResourceLocation;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class RecipeProvider implements IDataProvider {
   private static final Logger LOGGER = LogManager.getLogger();
   private static final Gson GSON = (new GsonBuilder()).setPrettyPrinting().create();
   protected final DataGenerator generator;

   public RecipeProvider(DataGenerator p_i48262_1_) {
      this.generator = p_i48262_1_;
   }

   public void act(DirectoryCache p_200398_1_) throws IOException {
      Path path = this.generator.getOutputFolder();
      Set<ResourceLocation> set = Sets.newHashSet();
      this.registerRecipes((p_lambda$act$0_4_) -> {
         if (!set.add(p_lambda$act$0_4_.getID())) {
            throw new IllegalStateException("Duplicate recipe " + p_lambda$act$0_4_.getID());
         } else {
            this.saveRecipe(p_200398_1_, p_lambda$act$0_4_.getRecipeJson(), path.resolve("data/" + p_lambda$act$0_4_.getID().getNamespace() + "/recipes/" + p_lambda$act$0_4_.getID().getPath() + ".json"));
            JsonObject jsonobject = p_lambda$act$0_4_.getAdvancementJson();
            if (jsonobject != null) {
               this.saveRecipeAdvancement(p_200398_1_, jsonobject, path.resolve("data/" + p_lambda$act$0_4_.getID().getNamespace() + "/advancements/" + p_lambda$act$0_4_.getAdvancementID().getPath() + ".json"));
            }

         }
      });
      if (this.getClass() == RecipeProvider.class) {
         this.saveRecipeAdvancement(p_200398_1_, Advancement.Builder.builder().withCriterion("impossible", (ICriterionInstance)(new ImpossibleTrigger.Instance())).serialize(), path.resolve("data/minecraft/advancements/recipes/root.json"));
      }

   }

   private void saveRecipe(DirectoryCache p_208311_1_, JsonObject p_208311_2_, Path p_208311_3_) {
      try {
         String s = GSON.toJson(p_208311_2_);
         String s1 = HASH_FUNCTION.hashUnencodedChars(s).toString();
         if (!Objects.equals(p_208311_1_.getPreviousHash(p_208311_3_), s1) || !Files.exists(p_208311_3_, new LinkOption[0])) {
            Files.createDirectories(p_208311_3_.getParent());
            BufferedWriter bufferedwriter = Files.newBufferedWriter(p_208311_3_);
            Throwable var7 = null;

            try {
               bufferedwriter.write(s);
            } catch (Throwable var17) {
               var7 = var17;
               throw var17;
            } finally {
               if (bufferedwriter != null) {
                  if (var7 != null) {
                     try {
                        bufferedwriter.close();
                     } catch (Throwable var16) {
                        var7.addSuppressed(var16);
                     }
                  } else {
                     bufferedwriter.close();
                  }
               }

            }
         }

         p_208311_1_.func_208316_a(p_208311_3_, s1);
      } catch (IOException var19) {
         LOGGER.error("Couldn't save recipe {}", p_208311_3_, var19);
      }

   }

   protected void saveRecipeAdvancement(DirectoryCache p_208310_1_, JsonObject p_208310_2_, Path p_208310_3_) {
      try {
         String s = GSON.toJson(p_208310_2_);
         String s1 = HASH_FUNCTION.hashUnencodedChars(s).toString();
         if (!Objects.equals(p_208310_1_.getPreviousHash(p_208310_3_), s1) || !Files.exists(p_208310_3_, new LinkOption[0])) {
            Files.createDirectories(p_208310_3_.getParent());
            BufferedWriter bufferedwriter = Files.newBufferedWriter(p_208310_3_);
            Throwable var7 = null;

            try {
               bufferedwriter.write(s);
            } catch (Throwable var17) {
               var7 = var17;
               throw var17;
            } finally {
               if (bufferedwriter != null) {
                  if (var7 != null) {
                     try {
                        bufferedwriter.close();
                     } catch (Throwable var16) {
                        var7.addSuppressed(var16);
                     }
                  } else {
                     bufferedwriter.close();
                  }
               }

            }
         }

         p_208310_1_.func_208316_a(p_208310_3_, s1);
      } catch (IOException var19) {
         LOGGER.error("Couldn't save recipe advancement {}", p_208310_3_, var19);
      }

   }

   protected void registerRecipes(Consumer<IFinishedRecipe> p_200404_1_) {
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_WOOD, 3).key('#', (IItemProvider)Blocks.ACACIA_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.ACACIA_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STRIPPED_ACACIA_WOOD, 3).key('#', (IItemProvider)Blocks.STRIPPED_ACACIA_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.STRIPPED_ACACIA_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ACACIA_BOAT).key('#', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("# #").patternLine("###").setGroup("boat").addCriterion("in_water", this.enteredBlock(Blocks.WATER)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.ACACIA_BUTTON).addIngredient((IItemProvider)Blocks.ACACIA_PLANKS).setGroup("wooden_button").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_DOOR, 3).key('#', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("##").patternLine("##").patternLine("##").setGroup("wooden_door").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_FENCE, 3).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("W#W").patternLine("W#W").setGroup("wooden_fence").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_FENCE_GATE).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("#W#").patternLine("#W#").setGroup("wooden_fence_gate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.ACACIA_PLANKS, 4).addIngredient(ItemTags.ACACIA_LOGS).setGroup("planks").addCriterion("has_logs", this.hasItem(ItemTags.ACACIA_LOGS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("##").setGroup("wooden_pressure_plate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_SLAB, 6).key('#', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("###").setGroup("wooden_slab").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_STAIRS, 4).key('#', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("#  ").patternLine("## ").patternLine("###").setGroup("wooden_stairs").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACACIA_TRAPDOOR, 2).key('#', (IItemProvider)Blocks.ACACIA_PLANKS).patternLine("###").patternLine("###").setGroup("wooden_trapdoor").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ACTIVATOR_RAIL, 6).key('#', (IItemProvider)Blocks.REDSTONE_TORCH).key('S', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("XSX").patternLine("X#X").patternLine("XSX").addCriterion("has_rail", this.hasItem((IItemProvider)Blocks.RAIL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.ANDESITE, 2).addIngredient((IItemProvider)Blocks.DIORITE).addIngredient((IItemProvider)Blocks.COBBLESTONE).addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.DIORITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ANVIL).key('I', (IItemProvider)Blocks.IRON_BLOCK).key('i', (IItemProvider)Items.IRON_INGOT).patternLine("III").patternLine(" i ").patternLine("iii").addCriterion("has_iron_block", this.hasItem((IItemProvider)Blocks.IRON_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ARMOR_STAND).key('/', (IItemProvider)Items.STICK).key('_', (IItemProvider)Blocks.SMOOTH_STONE_SLAB).patternLine("///").patternLine(" / ").patternLine("/_/").addCriterion("has_stone_slab", this.hasItem((IItemProvider)Blocks.SMOOTH_STONE_SLAB)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ARROW, 4).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.FLINT).key('Y', (IItemProvider)Items.FEATHER).patternLine("X").patternLine("#").patternLine("Y").addCriterion("has_feather", this.hasItem((IItemProvider)Items.FEATHER)).addCriterion("has_flint", this.hasItem((IItemProvider)Items.FLINT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BARREL, 1).key('P', ItemTags.PLANKS).key('S', ItemTags.WOODEN_SLABS).patternLine("PSP").patternLine("P P").patternLine("PSP").addCriterion("has_planks", this.hasItem(ItemTags.PLANKS)).addCriterion("has_wood_slab", this.hasItem(ItemTags.WOODEN_SLABS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BEACON).key('S', (IItemProvider)Items.NETHER_STAR).key('G', (IItemProvider)Blocks.GLASS).key('O', (IItemProvider)Blocks.OBSIDIAN).patternLine("GGG").patternLine("GSG").patternLine("OOO").addCriterion("has_nether_star", this.hasItem((IItemProvider)Items.NETHER_STAR)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.field_226906_mb_).key('P', ItemTags.PLANKS).key('H', (IItemProvider)Items.field_226635_pU_).patternLine("PPP").patternLine("HHH").patternLine("PPP").addCriterion("has_honeycomb", this.hasItem((IItemProvider)Items.field_226635_pU_)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BEETROOT_SOUP).addIngredient((IItemProvider)Items.BOWL).addIngredient((IItemProvider)Items.BEETROOT, 6).addCriterion("has_beetroot", this.hasItem((IItemProvider)Items.BEETROOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_WOOD, 3).key('#', (IItemProvider)Blocks.BIRCH_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.BIRCH_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STRIPPED_BIRCH_WOOD, 3).key('#', (IItemProvider)Blocks.STRIPPED_BIRCH_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.STRIPPED_BIRCH_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BIRCH_BOAT).key('#', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("# #").patternLine("###").setGroup("boat").addCriterion("in_water", this.enteredBlock(Blocks.WATER)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BIRCH_BUTTON).addIngredient((IItemProvider)Blocks.BIRCH_PLANKS).setGroup("wooden_button").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_DOOR, 3).key('#', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("##").patternLine("##").patternLine("##").setGroup("wooden_door").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_FENCE, 3).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("W#W").patternLine("W#W").setGroup("wooden_fence").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_FENCE_GATE).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("#W#").patternLine("#W#").setGroup("wooden_fence_gate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BIRCH_PLANKS, 4).addIngredient(ItemTags.BIRCH_LOGS).setGroup("planks").addCriterion("has_log", this.hasItem(ItemTags.BIRCH_LOGS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("##").setGroup("wooden_pressure_plate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_SLAB, 6).key('#', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("###").setGroup("wooden_slab").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_STAIRS, 4).key('#', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("#  ").patternLine("## ").patternLine("###").setGroup("wooden_stairs").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BIRCH_TRAPDOOR, 2).key('#', (IItemProvider)Blocks.BIRCH_PLANKS).patternLine("###").patternLine("###").setGroup("wooden_trapdoor").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BLACK_BANNER).key('#', (IItemProvider)Blocks.BLACK_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_black_wool", this.hasItem((IItemProvider)Blocks.BLACK_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BLACK_BED).key('#', (IItemProvider)Blocks.BLACK_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_black_wool", this.hasItem((IItemProvider)Blocks.BLACK_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLACK_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.BLACK_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "black_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLACK_CARPET, 3).key('#', (IItemProvider)Blocks.BLACK_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_black_wool", this.hasItem((IItemProvider)Blocks.BLACK_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLACK_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.BLACK_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_black_dye", this.hasItem((IItemProvider)Items.BLACK_DYE)).build(p_200404_1_, "black_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BLACK_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.BLACK_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLACK_DYE).addIngredient((IItemProvider)Items.INK_SAC).setGroup("black_dye").addCriterion("has_ink_sac", this.hasItem((IItemProvider)Items.INK_SAC)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLACK_DYE).addIngredient((IItemProvider)Blocks.WITHER_ROSE).setGroup("black_dye").addCriterion("has_black_flower", this.hasItem((IItemProvider)Blocks.WITHER_ROSE)).build(p_200404_1_, "black_dye_from_wither_rose");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLACK_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.BLACK_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLACK_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.BLACK_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLACK_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.BLACK_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_black_dye", this.hasItem((IItemProvider)Items.BLACK_DYE)).build(p_200404_1_, "black_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLACK_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.BLACK_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BLACK_WOOL).addIngredient((IItemProvider)Items.BLACK_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLAZE_POWDER, 2).addIngredient((IItemProvider)Items.BLAZE_ROD).addCriterion("has_blaze_rod", this.hasItem((IItemProvider)Items.BLAZE_ROD)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BLUE_BANNER).key('#', (IItemProvider)Blocks.BLUE_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_blue_wool", this.hasItem((IItemProvider)Blocks.BLUE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BLUE_BED).key('#', (IItemProvider)Blocks.BLUE_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_blue_wool", this.hasItem((IItemProvider)Blocks.BLUE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLUE_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.BLUE_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "blue_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_CARPET, 3).key('#', (IItemProvider)Blocks.BLUE_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_blue_wool", this.hasItem((IItemProvider)Blocks.BLUE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.BLUE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).build(p_200404_1_, "blue_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BLUE_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLUE_DYE).addIngredient((IItemProvider)Items.LAPIS_LAZULI).setGroup("blue_dye").addCriterion("has_lapis_lazuli", this.hasItem((IItemProvider)Items.LAPIS_LAZULI)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BLUE_DYE).addIngredient((IItemProvider)Blocks.CORNFLOWER).setGroup("blue_dye").addCriterion("has_blue_flower", this.hasItem((IItemProvider)Blocks.CORNFLOWER)).build(p_200404_1_, "blue_dye_from_cornflower");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_ICE).key('#', (IItemProvider)Blocks.PACKED_ICE).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_packed_ice", this.hasItem((IItemProvider)Blocks.PACKED_ICE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.BLUE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.BLUE_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.BLUE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).build(p_200404_1_, "blue_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLUE_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.BLUE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BLUE_WOOL).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.OAK_BOAT).key('#', (IItemProvider)Blocks.OAK_PLANKS).patternLine("# #").patternLine("###").setGroup("boat").addCriterion("in_water", this.enteredBlock(Blocks.WATER)).build(p_200404_1_);
      Item item = Items.BONE_MEAL;
      ShapedRecipeBuilder.shapedRecipe(Blocks.BONE_BLOCK).key('X', (IItemProvider)Items.BONE_MEAL).patternLine("XXX").patternLine("XXX").patternLine("XXX").addCriterion("has_bonemeal", this.hasItem((IItemProvider)item)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BONE_MEAL, 3).addIngredient((IItemProvider)Items.BONE).setGroup("bonemeal").addCriterion("has_bone", this.hasItem((IItemProvider)Items.BONE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BONE_MEAL, 9).addIngredient((IItemProvider)Blocks.BONE_BLOCK).setGroup("bonemeal").addCriterion("has_bone_block", this.hasItem((IItemProvider)Blocks.BONE_BLOCK)).build(p_200404_1_, "bone_meal_from_bone_block");
      ShapelessRecipeBuilder.shapelessRecipe(Items.BOOK).addIngredient((IItemProvider)Items.PAPER, 3).addIngredient((IItemProvider)Items.LEATHER).addCriterion("has_paper", this.hasItem((IItemProvider)Items.PAPER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BOOKSHELF).key('#', ItemTags.PLANKS).key('X', (IItemProvider)Items.BOOK).patternLine("###").patternLine("XXX").patternLine("###").addCriterion("has_book", this.hasItem((IItemProvider)Items.BOOK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BOW).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.STRING).patternLine(" #X").patternLine("# X").patternLine(" #X").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BOWL, 4).key('#', ItemTags.PLANKS).patternLine("# #").patternLine(" # ").addCriterion("has_brown_mushroom", this.hasItem((IItemProvider)Blocks.BROWN_MUSHROOM)).addCriterion("has_red_mushroom", this.hasItem((IItemProvider)Blocks.RED_MUSHROOM)).addCriterion("has_mushroom_stew", this.hasItem((IItemProvider)Items.MUSHROOM_STEW)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BREAD).key('#', (IItemProvider)Items.WHEAT).patternLine("###").addCriterion("has_wheat", this.hasItem((IItemProvider)Items.WHEAT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BREWING_STAND).key('B', (IItemProvider)Items.BLAZE_ROD).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine(" B ").patternLine("###").addCriterion("has_blaze_rod", this.hasItem((IItemProvider)Items.BLAZE_ROD)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BRICKS).key('#', (IItemProvider)Items.BRICK).patternLine("##").patternLine("##").addCriterion("has_brick", this.hasItem((IItemProvider)Items.BRICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.BRICKS).patternLine("###").addCriterion("has_brick_block", this.hasItem((IItemProvider)Blocks.BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_brick_block", this.hasItem((IItemProvider)Blocks.BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BROWN_BANNER).key('#', (IItemProvider)Blocks.BROWN_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_brown_wool", this.hasItem((IItemProvider)Blocks.BROWN_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BROWN_BED).key('#', (IItemProvider)Blocks.BROWN_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_brown_wool", this.hasItem((IItemProvider)Blocks.BROWN_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BROWN_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.BROWN_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "brown_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BROWN_CARPET, 3).key('#', (IItemProvider)Blocks.BROWN_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_brown_wool", this.hasItem((IItemProvider)Blocks.BROWN_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BROWN_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.BROWN_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_brown_dye", this.hasItem((IItemProvider)Items.BROWN_DYE)).build(p_200404_1_, "brown_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BROWN_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.BROWN_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.BROWN_DYE).addIngredient((IItemProvider)Items.COCOA_BEANS).setGroup("brown_dye").addCriterion("has_cocoa_beans", this.hasItem((IItemProvider)Items.COCOA_BEANS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BROWN_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.BROWN_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BROWN_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.BROWN_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BROWN_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.BROWN_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_brown_dye", this.hasItem((IItemProvider)Items.BROWN_DYE)).build(p_200404_1_, "brown_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.BROWN_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.BROWN_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.BROWN_WOOL).addIngredient((IItemProvider)Items.BROWN_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BUCKET).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("# #").patternLine(" # ").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CAKE).key('A', (IItemProvider)Items.MILK_BUCKET).key('B', (IItemProvider)Items.SUGAR).key('C', (IItemProvider)Items.WHEAT).key('E', (IItemProvider)Items.EGG).patternLine("AAA").patternLine("BEB").patternLine("CCC").addCriterion("has_egg", this.hasItem((IItemProvider)Items.EGG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CAMPFIRE).key('L', ItemTags.LOGS).key('S', (IItemProvider)Items.STICK).key('C', ItemTags.COALS).patternLine(" S ").patternLine("SCS").patternLine("LLL").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).addCriterion("has_coal", this.hasItem(ItemTags.COALS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.CARROT_ON_A_STICK).key('#', (IItemProvider)Items.FISHING_ROD).key('X', (IItemProvider)Items.CARROT).patternLine("# ").patternLine(" X").addCriterion("has_carrot", this.hasItem((IItemProvider)Items.CARROT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CAULDRON).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("# #").patternLine("# #").patternLine("###").addCriterion("has_water_bucket", this.hasItem((IItemProvider)Items.WATER_BUCKET)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COMPOSTER).key('#', ItemTags.WOODEN_SLABS).patternLine("# #").patternLine("# #").patternLine("###").addCriterion("has_wood_slab", this.hasItem(ItemTags.WOODEN_SLABS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CHEST).key('#', ItemTags.PLANKS).patternLine("###").patternLine("# #").patternLine("###").addCriterion("has_lots_of_items", new InventoryChangeTrigger.Instance(MinMaxBounds.IntBound.atLeast(10), MinMaxBounds.IntBound.UNBOUNDED, MinMaxBounds.IntBound.UNBOUNDED, new ItemPredicate[0])).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.CHEST_MINECART).key('A', (IItemProvider)Blocks.CHEST).key('B', (IItemProvider)Items.MINECART).patternLine("A").patternLine("B").addCriterion("has_minecart", this.hasItem((IItemProvider)Items.MINECART)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CHISELED_QUARTZ_BLOCK).key('#', (IItemProvider)Blocks.QUARTZ_SLAB).patternLine("#").patternLine("#").addCriterion("has_chiseled_quartz_block", this.hasItem((IItemProvider)Blocks.CHISELED_QUARTZ_BLOCK)).addCriterion("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).addCriterion("has_quartz_pillar", this.hasItem((IItemProvider)Blocks.QUARTZ_PILLAR)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CHISELED_STONE_BRICKS).key('#', (IItemProvider)Blocks.STONE_BRICK_SLAB).patternLine("#").patternLine("#").addCriterion("has_stone_bricks", this.hasItem(ItemTags.STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CLAY).key('#', (IItemProvider)Items.CLAY_BALL).patternLine("##").patternLine("##").addCriterion("has_clay_ball", this.hasItem((IItemProvider)Items.CLAY_BALL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.CLOCK).key('#', (IItemProvider)Items.GOLD_INGOT).key('X', (IItemProvider)Items.REDSTONE).patternLine(" # ").patternLine("#X#").patternLine(" # ").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.COAL, 9).addIngredient((IItemProvider)Blocks.COAL_BLOCK).addCriterion("has_coal_block", this.hasItem((IItemProvider)Blocks.COAL_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COAL_BLOCK).key('#', (IItemProvider)Items.COAL).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_coal", this.hasItem((IItemProvider)Items.COAL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COARSE_DIRT, 4).key('D', (IItemProvider)Blocks.DIRT).key('G', (IItemProvider)Blocks.GRAVEL).patternLine("DG").patternLine("GD").addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COBBLESTONE_SLAB, 6).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine("###").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COBBLESTONE_WALL, 6).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine("###").patternLine("###").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COMPARATOR).key('#', (IItemProvider)Blocks.REDSTONE_TORCH).key('X', (IItemProvider)Items.QUARTZ).key('I', (IItemProvider)Blocks.STONE).patternLine(" # ").patternLine("#X#").patternLine("III").addCriterion("has_quartz", this.hasItem((IItemProvider)Items.QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.COMPASS).key('#', (IItemProvider)Items.IRON_INGOT).key('X', (IItemProvider)Items.REDSTONE).patternLine(" # ").patternLine("#X#").patternLine(" # ").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.COOKIE, 8).key('#', (IItemProvider)Items.WHEAT).key('X', (IItemProvider)Items.COCOA_BEANS).patternLine("#X#").addCriterion("has_cocoa", this.hasItem((IItemProvider)Items.COCOA_BEANS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CRAFTING_TABLE).key('#', ItemTags.PLANKS).patternLine("##").patternLine("##").addCriterion("has_planks", this.hasItem(ItemTags.PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.CROSSBOW).key('~', (IItemProvider)Items.STRING).key('#', (IItemProvider)Items.STICK).key('&', (IItemProvider)Items.IRON_INGOT).key('$', (IItemProvider)Blocks.TRIPWIRE_HOOK).patternLine("#&#").patternLine("~$~").patternLine(" # ").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).addCriterion("has_tripwire_hook", this.hasItem((IItemProvider)Blocks.TRIPWIRE_HOOK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LOOM).key('#', ItemTags.PLANKS).key('@', (IItemProvider)Items.STRING).patternLine("@@").patternLine("##").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CHISELED_RED_SANDSTONE).key('#', (IItemProvider)Blocks.RED_SANDSTONE_SLAB).patternLine("#").patternLine("#").addCriterion("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).addCriterion("has_chiseled_red_sandstone", this.hasItem((IItemProvider)Blocks.CHISELED_RED_SANDSTONE)).addCriterion("has_cut_red_sandstone", this.hasItem((IItemProvider)Blocks.CUT_RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CHISELED_SANDSTONE).key('#', (IItemProvider)Blocks.SANDSTONE_SLAB).patternLine("#").patternLine("#").addCriterion("has_stone_slab", this.hasItem((IItemProvider)Blocks.SANDSTONE_SLAB)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.CYAN_BANNER).key('#', (IItemProvider)Blocks.CYAN_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_cyan_wool", this.hasItem((IItemProvider)Blocks.CYAN_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.CYAN_BED).key('#', (IItemProvider)Blocks.CYAN_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_cyan_wool", this.hasItem((IItemProvider)Blocks.CYAN_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.CYAN_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.CYAN_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "cyan_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.CYAN_CARPET, 3).key('#', (IItemProvider)Blocks.CYAN_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_cyan_wool", this.hasItem((IItemProvider)Blocks.CYAN_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CYAN_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.CYAN_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_cyan_dye", this.hasItem((IItemProvider)Items.CYAN_DYE)).build(p_200404_1_, "cyan_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.CYAN_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.CYAN_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.CYAN_DYE, 2).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Items.GREEN_DYE).addCriterion("has_green_dye", this.hasItem((IItemProvider)Items.GREEN_DYE)).addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CYAN_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.CYAN_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CYAN_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.CYAN_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CYAN_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.CYAN_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_cyan_dye", this.hasItem((IItemProvider)Items.CYAN_DYE)).build(p_200404_1_, "cyan_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.CYAN_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.CYAN_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.CYAN_WOOL).addIngredient((IItemProvider)Items.CYAN_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_WOOD, 3).key('#', (IItemProvider)Blocks.DARK_OAK_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.DARK_OAK_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STRIPPED_DARK_OAK_WOOD, 3).key('#', (IItemProvider)Blocks.STRIPPED_DARK_OAK_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.STRIPPED_DARK_OAK_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DARK_OAK_BOAT).key('#', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("# #").patternLine("###").setGroup("boat").addCriterion("in_water", this.enteredBlock(Blocks.WATER)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.DARK_OAK_BUTTON).addIngredient((IItemProvider)Blocks.DARK_OAK_PLANKS).setGroup("wooden_button").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_DOOR, 3).key('#', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("##").patternLine("##").patternLine("##").setGroup("wooden_door").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_FENCE, 3).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("W#W").patternLine("W#W").setGroup("wooden_fence").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_FENCE_GATE).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("#W#").patternLine("#W#").setGroup("wooden_fence_gate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.DARK_OAK_PLANKS, 4).addIngredient(ItemTags.DARK_OAK_LOGS).setGroup("planks").addCriterion("has_logs", this.hasItem(ItemTags.DARK_OAK_LOGS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("##").setGroup("wooden_pressure_plate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_SLAB, 6).key('#', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("###").setGroup("wooden_slab").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_STAIRS, 4).key('#', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("#  ").patternLine("## ").patternLine("###").setGroup("wooden_stairs").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_OAK_TRAPDOOR, 2).key('#', (IItemProvider)Blocks.DARK_OAK_PLANKS).patternLine("###").patternLine("###").setGroup("wooden_trapdoor").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_PRISMARINE).key('S', (IItemProvider)Items.PRISMARINE_SHARD).key('I', (IItemProvider)Items.BLACK_DYE).patternLine("SSS").patternLine("SIS").patternLine("SSS").addCriterion("has_prismarine_shard", this.hasItem((IItemProvider)Items.PRISMARINE_SHARD)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE_STAIRS, 4).key('#', (IItemProvider)Blocks.PRISMARINE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_prismarine", this.hasItem((IItemProvider)Blocks.PRISMARINE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE_BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.PRISMARINE_BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_prismarine_bricks", this.hasItem((IItemProvider)Blocks.PRISMARINE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_PRISMARINE_STAIRS, 4).key('#', (IItemProvider)Blocks.DARK_PRISMARINE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_dark_prismarine", this.hasItem((IItemProvider)Blocks.DARK_PRISMARINE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DAYLIGHT_DETECTOR).key('Q', (IItemProvider)Items.QUARTZ).key('G', (IItemProvider)Blocks.GLASS).key('W', Ingredient.fromTag(ItemTags.WOODEN_SLABS)).patternLine("GGG").patternLine("QQQ").patternLine("WWW").addCriterion("has_quartz", this.hasItem((IItemProvider)Items.QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DETECTOR_RAIL, 6).key('R', (IItemProvider)Items.REDSTONE).key('#', (IItemProvider)Blocks.STONE_PRESSURE_PLATE).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("X X").patternLine("X#X").patternLine("XRX").addCriterion("has_rail", this.hasItem((IItemProvider)Blocks.RAIL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.DIAMOND, 9).addIngredient((IItemProvider)Blocks.DIAMOND_BLOCK).addCriterion("has_diamond_block", this.hasItem((IItemProvider)Blocks.DIAMOND_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_AXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.DIAMOND).patternLine("XX").patternLine("X#").patternLine(" #").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DIAMOND_BLOCK).key('#', (IItemProvider)Items.DIAMOND).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_BOOTS).key('X', (IItemProvider)Items.DIAMOND).patternLine("X X").patternLine("X X").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_CHESTPLATE).key('X', (IItemProvider)Items.DIAMOND).patternLine("X X").patternLine("XXX").patternLine("XXX").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_HELMET).key('X', (IItemProvider)Items.DIAMOND).patternLine("XXX").patternLine("X X").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_HOE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.DIAMOND).patternLine("XX").patternLine(" #").patternLine(" #").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_LEGGINGS).key('X', (IItemProvider)Items.DIAMOND).patternLine("XXX").patternLine("X X").patternLine("X X").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_PICKAXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.DIAMOND).patternLine("XXX").patternLine(" # ").patternLine(" # ").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_SHOVEL).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.DIAMOND).patternLine("X").patternLine("#").patternLine("#").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DIAMOND_SWORD).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.DIAMOND).patternLine("X").patternLine("X").patternLine("#").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DIORITE, 2).key('Q', (IItemProvider)Items.QUARTZ).key('C', (IItemProvider)Blocks.COBBLESTONE).patternLine("CQ").patternLine("QC").addCriterion("has_quartz", this.hasItem((IItemProvider)Items.QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DISPENSER).key('R', (IItemProvider)Items.REDSTONE).key('#', (IItemProvider)Blocks.COBBLESTONE).key('X', (IItemProvider)Items.BOW).patternLine("###").patternLine("#X#").patternLine("#R#").addCriterion("has_bow", this.hasItem((IItemProvider)Items.BOW)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DROPPER).key('R', (IItemProvider)Items.REDSTONE).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine("###").patternLine("# #").patternLine("#R#").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.EMERALD, 9).addIngredient((IItemProvider)Blocks.EMERALD_BLOCK).addCriterion("has_emerald_block", this.hasItem((IItemProvider)Blocks.EMERALD_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.EMERALD_BLOCK).key('#', (IItemProvider)Items.EMERALD).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_emerald", this.hasItem((IItemProvider)Items.EMERALD)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ENCHANTING_TABLE).key('B', (IItemProvider)Items.BOOK).key('#', (IItemProvider)Blocks.OBSIDIAN).key('D', (IItemProvider)Items.DIAMOND).patternLine(" B ").patternLine("D#D").patternLine("###").addCriterion("has_obsidian", this.hasItem((IItemProvider)Blocks.OBSIDIAN)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ENDER_CHEST).key('#', (IItemProvider)Blocks.OBSIDIAN).key('E', (IItemProvider)Items.ENDER_EYE).patternLine("###").patternLine("#E#").patternLine("###").addCriterion("has_ender_eye", this.hasItem((IItemProvider)Items.ENDER_EYE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.ENDER_EYE).addIngredient((IItemProvider)Items.ENDER_PEARL).addIngredient((IItemProvider)Items.BLAZE_POWDER).addCriterion("has_blaze_powder", this.hasItem((IItemProvider)Items.BLAZE_POWDER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.END_STONE_BRICKS, 4).key('#', (IItemProvider)Blocks.END_STONE).patternLine("##").patternLine("##").addCriterion("has_end_stone", this.hasItem((IItemProvider)Blocks.END_STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.END_CRYSTAL).key('T', (IItemProvider)Items.GHAST_TEAR).key('E', (IItemProvider)Items.ENDER_EYE).key('G', (IItemProvider)Blocks.GLASS).patternLine("GGG").patternLine("GEG").patternLine("GTG").addCriterion("has_ender_eye", this.hasItem((IItemProvider)Items.ENDER_EYE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.END_ROD, 4).key('#', (IItemProvider)Items.POPPED_CHORUS_FRUIT).key('/', (IItemProvider)Items.BLAZE_ROD).patternLine("/").patternLine("#").addCriterion("has_chorus_fruit_popped", this.hasItem((IItemProvider)Items.POPPED_CHORUS_FRUIT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_FENCE, 3).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.OAK_PLANKS).patternLine("W#W").patternLine("W#W").setGroup("wooden_fence").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_FENCE_GATE).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.OAK_PLANKS).patternLine("#W#").patternLine("#W#").setGroup("wooden_fence_gate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.FERMENTED_SPIDER_EYE).addIngredient((IItemProvider)Items.SPIDER_EYE).addIngredient((IItemProvider)Blocks.BROWN_MUSHROOM).addIngredient((IItemProvider)Items.SUGAR).addCriterion("has_spider_eye", this.hasItem((IItemProvider)Items.SPIDER_EYE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.FIRE_CHARGE, 3).addIngredient((IItemProvider)Items.GUNPOWDER).addIngredient((IItemProvider)Items.BLAZE_POWDER).addIngredient(Ingredient.fromItems(Items.COAL, Items.CHARCOAL)).addCriterion("has_blaze_powder", this.hasItem((IItemProvider)Items.BLAZE_POWDER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.FISHING_ROD).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.STRING).patternLine("  #").patternLine(" #X").patternLine("# X").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.FLINT_AND_STEEL).addIngredient((IItemProvider)Items.IRON_INGOT).addIngredient((IItemProvider)Items.FLINT).addCriterion("has_flint", this.hasItem((IItemProvider)Items.FLINT)).addCriterion("has_obsidian", this.hasItem((IItemProvider)Blocks.OBSIDIAN)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.FLOWER_POT).key('#', (IItemProvider)Items.BRICK).patternLine("# #").patternLine(" # ").addCriterion("has_brick", this.hasItem((IItemProvider)Items.BRICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.FURNACE).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine("###").patternLine("# #").patternLine("###").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.FURNACE_MINECART).key('A', (IItemProvider)Blocks.FURNACE).key('B', (IItemProvider)Items.MINECART).patternLine("A").patternLine("B").addCriterion("has_minecart", this.hasItem((IItemProvider)Items.MINECART)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GLASS_BOTTLE, 3).key('#', (IItemProvider)Blocks.GLASS).patternLine("# #").patternLine(" # ").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GLASS_PANE, 16).key('#', (IItemProvider)Blocks.GLASS).patternLine("###").patternLine("###").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GLOWSTONE).key('#', (IItemProvider)Items.GLOWSTONE_DUST).patternLine("##").patternLine("##").addCriterion("has_glowstone_dust", this.hasItem((IItemProvider)Items.GLOWSTONE_DUST)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_APPLE).key('#', (IItemProvider)Items.GOLD_INGOT).key('X', (IItemProvider)Items.APPLE).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_AXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("XX").patternLine("X#").patternLine(" #").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_BOOTS).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("X X").patternLine("X X").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_CARROT).key('#', (IItemProvider)Items.GOLD_NUGGET).key('X', (IItemProvider)Items.CARROT).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_gold_nugget", this.hasItem((IItemProvider)Items.GOLD_NUGGET)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_CHESTPLATE).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("X X").patternLine("XXX").patternLine("XXX").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_HELMET).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("XXX").patternLine("X X").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_HOE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("XX").patternLine(" #").patternLine(" #").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_LEGGINGS).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("XXX").patternLine("X X").patternLine("X X").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_PICKAXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("XXX").patternLine(" # ").patternLine(" # ").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POWERED_RAIL, 6).key('R', (IItemProvider)Items.REDSTONE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("X X").patternLine("X#X").patternLine("XRX").addCriterion("has_rail", this.hasItem((IItemProvider)Blocks.RAIL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_SHOVEL).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("X").patternLine("#").patternLine("#").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GOLDEN_SWORD).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.GOLD_INGOT).patternLine("X").patternLine("X").patternLine("#").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GOLD_BLOCK).key('#', (IItemProvider)Items.GOLD_INGOT).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.GOLD_INGOT, 9).addIngredient((IItemProvider)Blocks.GOLD_BLOCK).setGroup("gold_ingot").addCriterion("has_gold_block", this.hasItem((IItemProvider)Blocks.GOLD_BLOCK)).build(p_200404_1_, "gold_ingot_from_gold_block");
      ShapedRecipeBuilder.shapedRecipe(Items.GOLD_INGOT).key('#', (IItemProvider)Items.GOLD_NUGGET).patternLine("###").patternLine("###").patternLine("###").setGroup("gold_ingot").addCriterion("has_gold_nugget", this.hasItem((IItemProvider)Items.GOLD_NUGGET)).build(p_200404_1_, "gold_ingot_from_nuggets");
      ShapelessRecipeBuilder.shapelessRecipe(Items.GOLD_NUGGET, 9).addIngredient((IItemProvider)Items.GOLD_INGOT).addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.GRANITE).addIngredient((IItemProvider)Blocks.DIORITE).addIngredient((IItemProvider)Items.QUARTZ).addCriterion("has_quartz", this.hasItem((IItemProvider)Items.QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GRAY_BANNER).key('#', (IItemProvider)Blocks.GRAY_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_gray_wool", this.hasItem((IItemProvider)Blocks.GRAY_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GRAY_BED).key('#', (IItemProvider)Blocks.GRAY_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_gray_wool", this.hasItem((IItemProvider)Blocks.GRAY_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.GRAY_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.GRAY_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "gray_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRAY_CARPET, 3).key('#', (IItemProvider)Blocks.GRAY_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_gray_wool", this.hasItem((IItemProvider)Blocks.GRAY_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRAY_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.GRAY_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_gray_dye", this.hasItem((IItemProvider)Items.GRAY_DYE)).build(p_200404_1_, "gray_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.GRAY_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.GRAY_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.GRAY_DYE, 2).addIngredient((IItemProvider)Items.BLACK_DYE).addIngredient((IItemProvider)Items.WHITE_DYE).addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).addCriterion("has_black_dye", this.hasItem((IItemProvider)Items.BLACK_DYE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRAY_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.GRAY_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRAY_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.GRAY_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRAY_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.GRAY_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_gray_dye", this.hasItem((IItemProvider)Items.GRAY_DYE)).build(p_200404_1_, "gray_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRAY_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.GRAY_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.GRAY_WOOL).addIngredient((IItemProvider)Items.GRAY_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GREEN_BANNER).key('#', (IItemProvider)Blocks.GREEN_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_green_wool", this.hasItem((IItemProvider)Blocks.GREEN_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GREEN_BED).key('#', (IItemProvider)Blocks.GREEN_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_green_wool", this.hasItem((IItemProvider)Blocks.GREEN_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.GREEN_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.GREEN_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "green_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.GREEN_CARPET, 3).key('#', (IItemProvider)Blocks.GREEN_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_green_wool", this.hasItem((IItemProvider)Blocks.GREEN_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GREEN_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.GREEN_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_green_dye", this.hasItem((IItemProvider)Items.GREEN_DYE)).build(p_200404_1_, "green_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.GREEN_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.GREEN_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GREEN_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.GREEN_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GREEN_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.GREEN_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GREEN_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.GREEN_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_green_dye", this.hasItem((IItemProvider)Items.GREEN_DYE)).build(p_200404_1_, "green_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.GREEN_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.GREEN_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.GREEN_WOOL).addIngredient((IItemProvider)Items.GREEN_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.HAY_BLOCK).key('#', (IItemProvider)Items.WHEAT).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_wheat", this.hasItem((IItemProvider)Items.WHEAT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("##").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.field_226638_pX_, 4).addIngredient((IItemProvider)Items.field_226639_pY_).addIngredient((IItemProvider)Items.GLASS_BOTTLE, 4).addCriterion("has_honey_block", this.hasItem((IItemProvider)Blocks.field_226907_mc_)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.field_226907_mc_, 1).key('S', (IItemProvider)Items.field_226638_pX_).patternLine("SS").patternLine("SS").addCriterion("has_honey_bottle", this.hasItem((IItemProvider)Items.field_226638_pX_)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.field_226908_md_).key('H', (IItemProvider)Items.field_226635_pU_).patternLine("HH").patternLine("HH").addCriterion("has_honeycomb", this.hasItem((IItemProvider)Items.field_226635_pU_)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.HOPPER).key('C', (IItemProvider)Blocks.CHEST).key('I', (IItemProvider)Items.IRON_INGOT).patternLine("I I").patternLine("ICI").patternLine(" I ").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.HOPPER_MINECART).key('A', (IItemProvider)Blocks.HOPPER).key('B', (IItemProvider)Items.MINECART).patternLine("A").patternLine("B").addCriterion("has_minecart", this.hasItem((IItemProvider)Items.MINECART)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_AXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("XX").patternLine("X#").patternLine(" #").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.IRON_BARS, 16).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("###").patternLine("###").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.IRON_BLOCK).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_BOOTS).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("X X").patternLine("X X").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_CHESTPLATE).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("X X").patternLine("XXX").patternLine("XXX").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.IRON_DOOR, 3).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("##").patternLine("##").patternLine("##").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_HELMET).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("XXX").patternLine("X X").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_HOE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("XX").patternLine(" #").patternLine(" #").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.IRON_INGOT, 9).addIngredient((IItemProvider)Blocks.IRON_BLOCK).setGroup("iron_ingot").addCriterion("has_iron_block", this.hasItem((IItemProvider)Blocks.IRON_BLOCK)).build(p_200404_1_, "iron_ingot_from_iron_block");
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_INGOT).key('#', (IItemProvider)Items.IRON_NUGGET).patternLine("###").patternLine("###").patternLine("###").setGroup("iron_ingot").addCriterion("has_iron_nugget", this.hasItem((IItemProvider)Items.IRON_NUGGET)).build(p_200404_1_, "iron_ingot_from_nuggets");
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_LEGGINGS).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("XXX").patternLine("X X").patternLine("X X").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.IRON_NUGGET, 9).addIngredient((IItemProvider)Items.IRON_INGOT).addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_PICKAXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("XXX").patternLine(" # ").patternLine(" # ").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_SHOVEL).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("X").patternLine("#").patternLine("#").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.IRON_SWORD).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("X").patternLine("X").patternLine("#").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.IRON_TRAPDOOR).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("##").patternLine("##").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ITEM_FRAME).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.LEATHER).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_leather", this.hasItem((IItemProvider)Items.LEATHER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUKEBOX).key('#', ItemTags.PLANKS).key('X', (IItemProvider)Items.DIAMOND).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_diamond", this.hasItem((IItemProvider)Items.DIAMOND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_WOOD, 3).key('#', (IItemProvider)Blocks.JUNGLE_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.JUNGLE_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STRIPPED_JUNGLE_WOOD, 3).key('#', (IItemProvider)Blocks.STRIPPED_JUNGLE_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.STRIPPED_JUNGLE_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.JUNGLE_BOAT).key('#', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("# #").patternLine("###").setGroup("boat").addCriterion("in_water", this.enteredBlock(Blocks.WATER)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.JUNGLE_BUTTON).addIngredient((IItemProvider)Blocks.JUNGLE_PLANKS).setGroup("wooden_button").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_DOOR, 3).key('#', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("##").patternLine("##").patternLine("##").setGroup("wooden_door").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_FENCE, 3).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("W#W").patternLine("W#W").setGroup("wooden_fence").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_FENCE_GATE).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("#W#").patternLine("#W#").setGroup("wooden_fence_gate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.JUNGLE_PLANKS, 4).addIngredient(ItemTags.JUNGLE_LOGS).setGroup("planks").addCriterion("has_log", this.hasItem(ItemTags.JUNGLE_LOGS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("##").setGroup("wooden_pressure_plate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_SLAB, 6).key('#', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("###").setGroup("wooden_slab").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_STAIRS, 4).key('#', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("#  ").patternLine("## ").patternLine("###").setGroup("wooden_stairs").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JUNGLE_TRAPDOOR, 2).key('#', (IItemProvider)Blocks.JUNGLE_PLANKS).patternLine("###").patternLine("###").setGroup("wooden_trapdoor").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LADDER, 3).key('#', (IItemProvider)Items.STICK).patternLine("# #").patternLine("###").patternLine("# #").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LAPIS_BLOCK).key('#', (IItemProvider)Items.LAPIS_LAZULI).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_lapis", this.hasItem((IItemProvider)Items.LAPIS_LAZULI)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LAPIS_LAZULI, 9).addIngredient((IItemProvider)Blocks.LAPIS_BLOCK).addCriterion("has_lapis_block", this.hasItem((IItemProvider)Blocks.LAPIS_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEAD, 2).key('~', (IItemProvider)Items.STRING).key('O', (IItemProvider)Items.SLIME_BALL).patternLine("~~ ").patternLine("~O ").patternLine("  ~").addCriterion("has_slime_ball", this.hasItem((IItemProvider)Items.SLIME_BALL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEATHER).key('#', (IItemProvider)Items.RABBIT_HIDE).patternLine("##").patternLine("##").addCriterion("has_rabbit_hide", this.hasItem((IItemProvider)Items.RABBIT_HIDE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEATHER_BOOTS).key('X', (IItemProvider)Items.LEATHER).patternLine("X X").patternLine("X X").addCriterion("has_leather", this.hasItem((IItemProvider)Items.LEATHER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEATHER_CHESTPLATE).key('X', (IItemProvider)Items.LEATHER).patternLine("X X").patternLine("XXX").patternLine("XXX").addCriterion("has_leather", this.hasItem((IItemProvider)Items.LEATHER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEATHER_HELMET).key('X', (IItemProvider)Items.LEATHER).patternLine("XXX").patternLine("X X").addCriterion("has_leather", this.hasItem((IItemProvider)Items.LEATHER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEATHER_LEGGINGS).key('X', (IItemProvider)Items.LEATHER).patternLine("XXX").patternLine("X X").patternLine("X X").addCriterion("has_leather", this.hasItem((IItemProvider)Items.LEATHER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LEATHER_HORSE_ARMOR).key('X', (IItemProvider)Items.LEATHER).patternLine("X X").patternLine("XXX").patternLine("X X").addCriterion("has_leather", this.hasItem((IItemProvider)Items.LEATHER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LECTERN).key('S', ItemTags.WOODEN_SLABS).key('B', (IItemProvider)Blocks.BOOKSHELF).patternLine("SSS").patternLine(" B ").patternLine(" S ").addCriterion("has_book", this.hasItem((IItemProvider)Items.BOOK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LEVER).key('#', (IItemProvider)Blocks.COBBLESTONE).key('X', (IItemProvider)Items.STICK).patternLine("X").patternLine("#").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LIGHT_BLUE_BANNER).key('#', (IItemProvider)Blocks.LIGHT_BLUE_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_light_blue_wool", this.hasItem((IItemProvider)Blocks.LIGHT_BLUE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LIGHT_BLUE_BED).key('#', (IItemProvider)Blocks.LIGHT_BLUE_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_light_blue_wool", this.hasItem((IItemProvider)Blocks.LIGHT_BLUE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_BLUE_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.LIGHT_BLUE_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "light_blue_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_BLUE_CARPET, 3).key('#', (IItemProvider)Blocks.LIGHT_BLUE_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_light_blue_wool", this.hasItem((IItemProvider)Blocks.LIGHT_BLUE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_BLUE_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.LIGHT_BLUE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_light_blue_dye", this.hasItem((IItemProvider)Items.LIGHT_BLUE_DYE)).build(p_200404_1_, "light_blue_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.LIGHT_BLUE_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.LIGHT_BLUE_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_BLUE_DYE).addIngredient((IItemProvider)Blocks.BLUE_ORCHID).setGroup("light_blue_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.BLUE_ORCHID)).build(p_200404_1_, "light_blue_dye_from_blue_orchid");
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_BLUE_DYE, 2).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Items.WHITE_DYE).setGroup("light_blue_dye").addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).build(p_200404_1_, "light_blue_dye_from_blue_white_dye");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_BLUE_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.LIGHT_BLUE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.LIGHT_BLUE_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.LIGHT_BLUE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_light_blue_dye", this.hasItem((IItemProvider)Items.LIGHT_BLUE_DYE)).build(p_200404_1_, "light_blue_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_BLUE_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.LIGHT_BLUE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.LIGHT_BLUE_WOOL).addIngredient((IItemProvider)Items.LIGHT_BLUE_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LIGHT_GRAY_BANNER).key('#', (IItemProvider)Blocks.LIGHT_GRAY_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_light_gray_wool", this.hasItem((IItemProvider)Blocks.LIGHT_GRAY_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LIGHT_GRAY_BED).key('#', (IItemProvider)Blocks.LIGHT_GRAY_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_light_gray_wool", this.hasItem((IItemProvider)Blocks.LIGHT_GRAY_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_GRAY_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.LIGHT_GRAY_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "light_gray_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_GRAY_CARPET, 3).key('#', (IItemProvider)Blocks.LIGHT_GRAY_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_light_gray_wool", this.hasItem((IItemProvider)Blocks.LIGHT_GRAY_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_GRAY_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.LIGHT_GRAY_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_light_gray_dye", this.hasItem((IItemProvider)Items.LIGHT_GRAY_DYE)).build(p_200404_1_, "light_gray_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.LIGHT_GRAY_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.LIGHT_GRAY_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_GRAY_DYE).addIngredient((IItemProvider)Blocks.AZURE_BLUET).setGroup("light_gray_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.AZURE_BLUET)).build(p_200404_1_, "light_gray_dye_from_azure_bluet");
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_GRAY_DYE, 2).addIngredient((IItemProvider)Items.GRAY_DYE).addIngredient((IItemProvider)Items.WHITE_DYE).setGroup("light_gray_dye").addCriterion("has_gray_dye", this.hasItem((IItemProvider)Items.GRAY_DYE)).addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).build(p_200404_1_, "light_gray_dye_from_gray_white_dye");
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_GRAY_DYE, 3).addIngredient((IItemProvider)Items.BLACK_DYE).addIngredient((IItemProvider)Items.WHITE_DYE, 2).setGroup("light_gray_dye").addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).addCriterion("has_black_dye", this.hasItem((IItemProvider)Items.BLACK_DYE)).build(p_200404_1_, "light_gray_dye_from_black_white_dye");
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_GRAY_DYE).addIngredient((IItemProvider)Blocks.OXEYE_DAISY).setGroup("light_gray_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.OXEYE_DAISY)).build(p_200404_1_, "light_gray_dye_from_oxeye_daisy");
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIGHT_GRAY_DYE).addIngredient((IItemProvider)Blocks.WHITE_TULIP).setGroup("light_gray_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.WHITE_TULIP)).build(p_200404_1_, "light_gray_dye_from_white_tulip");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_GRAY_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.LIGHT_GRAY_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.LIGHT_GRAY_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.LIGHT_GRAY_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_light_gray_dye", this.hasItem((IItemProvider)Items.LIGHT_GRAY_DYE)).build(p_200404_1_, "light_gray_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_GRAY_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.LIGHT_GRAY_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.LIGHT_GRAY_WOOL).addIngredient((IItemProvider)Items.LIGHT_GRAY_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE).key('#', (IItemProvider)Items.GOLD_INGOT).patternLine("##").addCriterion("has_gold_ingot", this.hasItem((IItemProvider)Items.GOLD_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LIME_BANNER).key('#', (IItemProvider)Blocks.LIME_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_lime_wool", this.hasItem((IItemProvider)Blocks.LIME_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.LIME_BED).key('#', (IItemProvider)Blocks.LIME_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_lime_wool", this.hasItem((IItemProvider)Blocks.LIME_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIME_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.LIME_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "lime_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIME_CARPET, 3).key('#', (IItemProvider)Blocks.LIME_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_lime_wool", this.hasItem((IItemProvider)Blocks.LIME_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIME_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.LIME_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_lime_dye", this.hasItem((IItemProvider)Items.LIME_DYE)).build(p_200404_1_, "lime_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.LIME_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.LIME_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.LIME_DYE, 2).addIngredient((IItemProvider)Items.GREEN_DYE).addIngredient((IItemProvider)Items.WHITE_DYE).addCriterion("has_green_dye", this.hasItem((IItemProvider)Items.GREEN_DYE)).addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIME_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.LIME_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIME_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.LIME_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIME_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.LIME_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_lime_dye", this.hasItem((IItemProvider)Items.LIME_DYE)).build(p_200404_1_, "lime_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.LIME_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.LIME_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.LIME_WOOL).addIngredient((IItemProvider)Items.LIME_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.JACK_O_LANTERN).key('A', (IItemProvider)Blocks.CARVED_PUMPKIN).key('B', (IItemProvider)Blocks.TORCH).patternLine("A").patternLine("B").addCriterion("has_carved_pumpkin", this.hasItem((IItemProvider)Blocks.CARVED_PUMPKIN)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.MAGENTA_BANNER).key('#', (IItemProvider)Blocks.MAGENTA_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_magenta_wool", this.hasItem((IItemProvider)Blocks.MAGENTA_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.MAGENTA_BED).key('#', (IItemProvider)Blocks.MAGENTA_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_magenta_wool", this.hasItem((IItemProvider)Blocks.MAGENTA_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGENTA_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.MAGENTA_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "magenta_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGENTA_CARPET, 3).key('#', (IItemProvider)Blocks.MAGENTA_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_magenta_wool", this.hasItem((IItemProvider)Blocks.MAGENTA_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGENTA_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.MAGENTA_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_magenta_dye", this.hasItem((IItemProvider)Items.MAGENTA_DYE)).build(p_200404_1_, "magenta_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.MAGENTA_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.MAGENTA_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGENTA_DYE).addIngredient((IItemProvider)Blocks.ALLIUM).setGroup("magenta_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.ALLIUM)).build(p_200404_1_, "magenta_dye_from_allium");
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGENTA_DYE, 4).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Items.RED_DYE, 2).addIngredient((IItemProvider)Items.WHITE_DYE).setGroup("magenta_dye").addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).addCriterion("has_rose_red", this.hasItem((IItemProvider)Items.RED_DYE)).addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).build(p_200404_1_, "magenta_dye_from_blue_red_white_dye");
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGENTA_DYE, 3).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Items.RED_DYE).addIngredient((IItemProvider)Items.PINK_DYE).setGroup("magenta_dye").addCriterion("has_pink_dye", this.hasItem((IItemProvider)Items.PINK_DYE)).addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).addCriterion("has_red_dye", this.hasItem((IItemProvider)Items.RED_DYE)).build(p_200404_1_, "magenta_dye_from_blue_red_pink");
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGENTA_DYE, 2).addIngredient((IItemProvider)Blocks.LILAC).setGroup("magenta_dye").addCriterion("has_double_plant", this.hasItem((IItemProvider)Blocks.LILAC)).build(p_200404_1_, "magenta_dye_from_lilac");
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGENTA_DYE, 2).addIngredient((IItemProvider)Items.PURPLE_DYE).addIngredient((IItemProvider)Items.PINK_DYE).setGroup("magenta_dye").addCriterion("has_pink_dye", this.hasItem((IItemProvider)Items.PINK_DYE)).addCriterion("has_purple_dye", this.hasItem((IItemProvider)Items.PURPLE_DYE)).build(p_200404_1_, "magenta_dye_from_purple_and_pink");
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGENTA_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.MAGENTA_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGENTA_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.MAGENTA_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGENTA_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.MAGENTA_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_magenta_dye", this.hasItem((IItemProvider)Items.MAGENTA_DYE)).build(p_200404_1_, "magenta_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGENTA_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.MAGENTA_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.MAGENTA_WOOL).addIngredient((IItemProvider)Items.MAGENTA_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MAGMA_BLOCK).key('#', (IItemProvider)Items.MAGMA_CREAM).patternLine("##").patternLine("##").addCriterion("has_magma_cream", this.hasItem((IItemProvider)Items.MAGMA_CREAM)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.MAGMA_CREAM).addIngredient((IItemProvider)Items.BLAZE_POWDER).addIngredient((IItemProvider)Items.SLIME_BALL).addCriterion("has_blaze_powder", this.hasItem((IItemProvider)Items.BLAZE_POWDER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.MAP).key('#', (IItemProvider)Items.PAPER).key('X', (IItemProvider)Items.COMPASS).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_compass", this.hasItem((IItemProvider)Items.COMPASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MELON).key('M', (IItemProvider)Items.MELON_SLICE).patternLine("MMM").patternLine("MMM").patternLine("MMM").addCriterion("has_melon", this.hasItem((IItemProvider)Items.MELON_SLICE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.MELON_SEEDS).addIngredient((IItemProvider)Items.MELON_SLICE).addCriterion("has_melon", this.hasItem((IItemProvider)Items.MELON_SLICE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.MINECART).key('#', (IItemProvider)Items.IRON_INGOT).patternLine("# #").patternLine("###").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.MOSSY_COBBLESTONE).addIngredient((IItemProvider)Blocks.COBBLESTONE).addIngredient((IItemProvider)Blocks.VINE).addCriterion("has_vine", this.hasItem((IItemProvider)Blocks.VINE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MOSSY_COBBLESTONE_WALL, 6).key('#', (IItemProvider)Blocks.MOSSY_COBBLESTONE).patternLine("###").patternLine("###").addCriterion("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.MOSSY_STONE_BRICKS).addIngredient((IItemProvider)Blocks.STONE_BRICKS).addIngredient((IItemProvider)Blocks.VINE).addCriterion("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.MUSHROOM_STEW).addIngredient((IItemProvider)Blocks.BROWN_MUSHROOM).addIngredient((IItemProvider)Blocks.RED_MUSHROOM).addIngredient((IItemProvider)Items.BOWL).addCriterion("has_mushroom_stew", this.hasItem((IItemProvider)Items.MUSHROOM_STEW)).addCriterion("has_bowl", this.hasItem((IItemProvider)Items.BOWL)).addCriterion("has_brown_mushroom", this.hasItem((IItemProvider)Blocks.BROWN_MUSHROOM)).addCriterion("has_red_mushroom", this.hasItem((IItemProvider)Blocks.RED_MUSHROOM)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NETHER_BRICKS).key('N', (IItemProvider)Items.NETHER_BRICK).patternLine("NN").patternLine("NN").addCriterion("has_netherbrick", this.hasItem((IItemProvider)Items.NETHER_BRICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NETHER_BRICK_FENCE, 6).key('#', (IItemProvider)Blocks.NETHER_BRICKS).key('-', (IItemProvider)Items.NETHER_BRICK).patternLine("#-#").patternLine("#-#").addCriterion("has_nether_brick", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NETHER_BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.NETHER_BRICKS).patternLine("###").addCriterion("has_nether_brick", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NETHER_BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.NETHER_BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_nether_brick", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NETHER_WART_BLOCK).key('#', (IItemProvider)Items.NETHER_WART).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_nether_wart", this.hasItem((IItemProvider)Items.NETHER_WART)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NOTE_BLOCK).key('#', ItemTags.PLANKS).key('X', (IItemProvider)Items.REDSTONE).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_WOOD, 3).key('#', (IItemProvider)Blocks.OAK_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.OAK_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STRIPPED_OAK_WOOD, 3).key('#', (IItemProvider)Blocks.STRIPPED_OAK_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.STRIPPED_OAK_LOG)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.OAK_BUTTON).addIngredient((IItemProvider)Blocks.OAK_PLANKS).setGroup("wooden_button").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.OAK_PLANKS, 4).addIngredient(ItemTags.OAK_LOGS).setGroup("planks").addCriterion("has_log", this.hasItem(ItemTags.OAK_LOGS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.OAK_PLANKS).patternLine("##").setGroup("wooden_pressure_plate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_SLAB, 6).key('#', (IItemProvider)Blocks.OAK_PLANKS).patternLine("###").setGroup("wooden_slab").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_STAIRS, 4).key('#', (IItemProvider)Blocks.OAK_PLANKS).patternLine("#  ").patternLine("## ").patternLine("###").setGroup("wooden_stairs").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_TRAPDOOR, 2).key('#', (IItemProvider)Blocks.OAK_PLANKS).patternLine("###").patternLine("###").setGroup("wooden_trapdoor").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OBSERVER).key('Q', (IItemProvider)Items.QUARTZ).key('R', (IItemProvider)Items.REDSTONE).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine("###").patternLine("RRQ").patternLine("###").addCriterion("has_quartz", this.hasItem((IItemProvider)Items.QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ORANGE_BANNER).key('#', (IItemProvider)Blocks.ORANGE_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_orange_wool", this.hasItem((IItemProvider)Blocks.ORANGE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ORANGE_BED).key('#', (IItemProvider)Blocks.ORANGE_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_orange_wool", this.hasItem((IItemProvider)Blocks.ORANGE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.ORANGE_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.ORANGE_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "orange_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.ORANGE_CARPET, 3).key('#', (IItemProvider)Blocks.ORANGE_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_orange_wool", this.hasItem((IItemProvider)Blocks.ORANGE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ORANGE_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.ORANGE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_oramge_dye", this.hasItem((IItemProvider)Items.ORANGE_DYE)).build(p_200404_1_, "orange_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.ORANGE_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.ORANGE_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.ORANGE_DYE).addIngredient((IItemProvider)Blocks.ORANGE_TULIP).setGroup("orange_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.ORANGE_TULIP)).build(p_200404_1_, "orange_dye_from_orange_tulip");
      ShapelessRecipeBuilder.shapelessRecipe(Items.ORANGE_DYE, 2).addIngredient((IItemProvider)Items.RED_DYE).addIngredient((IItemProvider)Items.YELLOW_DYE).setGroup("orange_dye").addCriterion("has_red_dye", this.hasItem((IItemProvider)Items.RED_DYE)).addCriterion("has_yellow_dye", this.hasItem((IItemProvider)Items.YELLOW_DYE)).build(p_200404_1_, "orange_dye_from_red_yellow");
      ShapedRecipeBuilder.shapedRecipe(Blocks.ORANGE_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.ORANGE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ORANGE_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.ORANGE_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ORANGE_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.ORANGE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_orange_dye", this.hasItem((IItemProvider)Items.ORANGE_DYE)).build(p_200404_1_, "orange_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.ORANGE_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.ORANGE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.ORANGE_WOOL).addIngredient((IItemProvider)Items.ORANGE_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.PAINTING).key('#', (IItemProvider)Items.STICK).key('X', Ingredient.fromTag(ItemTags.WOOL)).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_wool", this.hasItem(ItemTags.WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.PAPER, 3).key('#', (IItemProvider)Blocks.SUGAR_CANE).patternLine("###").addCriterion("has_reeds", this.hasItem((IItemProvider)Blocks.SUGAR_CANE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.QUARTZ_PILLAR, 2).key('#', (IItemProvider)Blocks.QUARTZ_BLOCK).patternLine("#").patternLine("#").addCriterion("has_chiseled_quartz_block", this.hasItem((IItemProvider)Blocks.CHISELED_QUARTZ_BLOCK)).addCriterion("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).addCriterion("has_quartz_pillar", this.hasItem((IItemProvider)Blocks.QUARTZ_PILLAR)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.PACKED_ICE).addIngredient((IItemProvider)Blocks.ICE, 9).addCriterion("has_ice", this.hasItem((IItemProvider)Blocks.ICE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.PINK_BANNER).key('#', (IItemProvider)Blocks.PINK_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_pink_wool", this.hasItem((IItemProvider)Blocks.PINK_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.PINK_BED).key('#', (IItemProvider)Blocks.PINK_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_pink_wool", this.hasItem((IItemProvider)Blocks.PINK_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.PINK_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.PINK_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "pink_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.PINK_CARPET, 3).key('#', (IItemProvider)Blocks.PINK_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_pink_wool", this.hasItem((IItemProvider)Blocks.PINK_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PINK_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.PINK_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_pink_dye", this.hasItem((IItemProvider)Items.PINK_DYE)).build(p_200404_1_, "pink_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.PINK_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.PINK_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.PINK_DYE, 2).addIngredient((IItemProvider)Blocks.PEONY).setGroup("pink_dye").addCriterion("has_double_plant", this.hasItem((IItemProvider)Blocks.PEONY)).build(p_200404_1_, "pink_dye_from_peony");
      ShapelessRecipeBuilder.shapelessRecipe(Items.PINK_DYE).addIngredient((IItemProvider)Blocks.PINK_TULIP).setGroup("pink_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.PINK_TULIP)).build(p_200404_1_, "pink_dye_from_pink_tulip");
      ShapelessRecipeBuilder.shapelessRecipe(Items.PINK_DYE, 2).addIngredient((IItemProvider)Items.RED_DYE).addIngredient((IItemProvider)Items.WHITE_DYE).setGroup("pink_dye").addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).addCriterion("has_red_dye", this.hasItem((IItemProvider)Items.RED_DYE)).build(p_200404_1_, "pink_dye_from_red_white_dye");
      ShapedRecipeBuilder.shapedRecipe(Blocks.PINK_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.PINK_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PINK_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.PINK_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PINK_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.PINK_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_pink_dye", this.hasItem((IItemProvider)Items.PINK_DYE)).build(p_200404_1_, "pink_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.PINK_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.PINK_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.PINK_WOOL).addIngredient((IItemProvider)Items.PINK_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PISTON).key('R', (IItemProvider)Items.REDSTONE).key('#', (IItemProvider)Blocks.COBBLESTONE).key('T', ItemTags.PLANKS).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("TTT").patternLine("#X#").patternLine("#R#").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_GRANITE, 4).key('S', (IItemProvider)Blocks.GRANITE).patternLine("SS").patternLine("SS").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.GRANITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_DIORITE, 4).key('S', (IItemProvider)Blocks.DIORITE).patternLine("SS").patternLine("SS").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.DIORITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_ANDESITE, 4).key('S', (IItemProvider)Blocks.ANDESITE).patternLine("SS").patternLine("SS").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.ANDESITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE).key('S', (IItemProvider)Items.PRISMARINE_SHARD).patternLine("SS").patternLine("SS").addCriterion("has_prismarine_shard", this.hasItem((IItemProvider)Items.PRISMARINE_SHARD)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE_BRICKS).key('S', (IItemProvider)Items.PRISMARINE_SHARD).patternLine("SSS").patternLine("SSS").patternLine("SSS").addCriterion("has_prismarine_shard", this.hasItem((IItemProvider)Items.PRISMARINE_SHARD)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE_SLAB, 6).key('#', (IItemProvider)Blocks.PRISMARINE).patternLine("###").addCriterion("has_prismarine", this.hasItem((IItemProvider)Blocks.PRISMARINE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE_BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.PRISMARINE_BRICKS).patternLine("###").addCriterion("has_prismarine_bricks", this.hasItem((IItemProvider)Blocks.PRISMARINE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DARK_PRISMARINE_SLAB, 6).key('#', (IItemProvider)Blocks.DARK_PRISMARINE).patternLine("###").addCriterion("has_dark_prismarine", this.hasItem((IItemProvider)Blocks.DARK_PRISMARINE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.PUMPKIN_PIE).addIngredient((IItemProvider)Blocks.PUMPKIN).addIngredient((IItemProvider)Items.SUGAR).addIngredient((IItemProvider)Items.EGG).addCriterion("has_carved_pumpkin", this.hasItem((IItemProvider)Blocks.CARVED_PUMPKIN)).addCriterion("has_pumpkin", this.hasItem((IItemProvider)Blocks.PUMPKIN)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.PUMPKIN_SEEDS, 4).addIngredient((IItemProvider)Blocks.PUMPKIN).addCriterion("has_pumpkin", this.hasItem((IItemProvider)Blocks.PUMPKIN)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.PURPLE_BANNER).key('#', (IItemProvider)Blocks.PURPLE_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_purple_wool", this.hasItem((IItemProvider)Blocks.PURPLE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.PURPLE_BED).key('#', (IItemProvider)Blocks.PURPLE_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_purple_wool", this.hasItem((IItemProvider)Blocks.PURPLE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.PURPLE_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.PURPLE_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "purple_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPLE_CARPET, 3).key('#', (IItemProvider)Blocks.PURPLE_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_purple_wool", this.hasItem((IItemProvider)Blocks.PURPLE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPLE_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.PURPLE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_purple_dye", this.hasItem((IItemProvider)Items.PURPLE_DYE)).build(p_200404_1_, "purple_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.PURPLE_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.PURPLE_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.PURPLE_DYE, 2).addIngredient((IItemProvider)Items.BLUE_DYE).addIngredient((IItemProvider)Items.RED_DYE).addCriterion("has_blue_dye", this.hasItem((IItemProvider)Items.BLUE_DYE)).addCriterion("has_red_dye", this.hasItem((IItemProvider)Items.RED_DYE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SHULKER_BOX).key('#', (IItemProvider)Blocks.CHEST).key('-', (IItemProvider)Items.SHULKER_SHELL).patternLine("-").patternLine("#").patternLine("-").addCriterion("has_shulker_shell", this.hasItem((IItemProvider)Items.SHULKER_SHELL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPLE_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.PURPLE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPLE_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.PURPLE_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPLE_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.PURPLE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_purple_dye", this.hasItem((IItemProvider)Items.PURPLE_DYE)).build(p_200404_1_, "purple_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPLE_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.PURPLE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.PURPLE_WOOL).addIngredient((IItemProvider)Items.PURPLE_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPUR_BLOCK, 4).key('F', (IItemProvider)Items.POPPED_CHORUS_FRUIT).patternLine("FF").patternLine("FF").addCriterion("has_chorus_fruit_popped", this.hasItem((IItemProvider)Items.POPPED_CHORUS_FRUIT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPUR_PILLAR).key('#', (IItemProvider)Blocks.PURPUR_SLAB).patternLine("#").patternLine("#").addCriterion("has_purpur_block", this.hasItem((IItemProvider)Blocks.PURPUR_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPUR_SLAB, 6).key('#', Ingredient.fromItems(Blocks.PURPUR_BLOCK, Blocks.PURPUR_PILLAR)).patternLine("###").addCriterion("has_purpur_block", this.hasItem((IItemProvider)Blocks.PURPUR_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PURPUR_STAIRS, 4).key('#', Ingredient.fromItems(Blocks.PURPUR_BLOCK, Blocks.PURPUR_PILLAR)).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_purpur_block", this.hasItem((IItemProvider)Blocks.PURPUR_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.QUARTZ_BLOCK).key('#', (IItemProvider)Items.QUARTZ).patternLine("##").patternLine("##").addCriterion("has_quartz", this.hasItem((IItemProvider)Items.QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.QUARTZ_SLAB, 6).key('#', Ingredient.fromItems(Blocks.CHISELED_QUARTZ_BLOCK, Blocks.QUARTZ_BLOCK, Blocks.QUARTZ_PILLAR)).patternLine("###").addCriterion("has_chiseled_quartz_block", this.hasItem((IItemProvider)Blocks.CHISELED_QUARTZ_BLOCK)).addCriterion("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).addCriterion("has_quartz_pillar", this.hasItem((IItemProvider)Blocks.QUARTZ_PILLAR)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.QUARTZ_STAIRS, 4).key('#', Ingredient.fromItems(Blocks.CHISELED_QUARTZ_BLOCK, Blocks.QUARTZ_BLOCK, Blocks.QUARTZ_PILLAR)).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_chiseled_quartz_block", this.hasItem((IItemProvider)Blocks.CHISELED_QUARTZ_BLOCK)).addCriterion("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).addCriterion("has_quartz_pillar", this.hasItem((IItemProvider)Blocks.QUARTZ_PILLAR)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.RABBIT_STEW).addIngredient((IItemProvider)Items.BAKED_POTATO).addIngredient((IItemProvider)Items.COOKED_RABBIT).addIngredient((IItemProvider)Items.BOWL).addIngredient((IItemProvider)Items.CARROT).addIngredient((IItemProvider)Blocks.BROWN_MUSHROOM).setGroup("rabbit_stew").addCriterion("has_cooked_rabbit", this.hasItem((IItemProvider)Items.COOKED_RABBIT)).build(p_200404_1_, "rabbit_stew_from_brown_mushroom");
      ShapelessRecipeBuilder.shapelessRecipe(Items.RABBIT_STEW).addIngredient((IItemProvider)Items.BAKED_POTATO).addIngredient((IItemProvider)Items.COOKED_RABBIT).addIngredient((IItemProvider)Items.BOWL).addIngredient((IItemProvider)Items.CARROT).addIngredient((IItemProvider)Blocks.RED_MUSHROOM).setGroup("rabbit_stew").addCriterion("has_cooked_rabbit", this.hasItem((IItemProvider)Items.COOKED_RABBIT)).build(p_200404_1_, "rabbit_stew_from_red_mushroom");
      ShapedRecipeBuilder.shapedRecipe(Blocks.RAIL, 16).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.IRON_INGOT).patternLine("X X").patternLine("X#X").patternLine("X X").addCriterion("has_minecart", this.hasItem((IItemProvider)Items.MINECART)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.REDSTONE, 9).addIngredient((IItemProvider)Blocks.REDSTONE_BLOCK).addCriterion("has_redstone_block", this.hasItem((IItemProvider)Blocks.REDSTONE_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.REDSTONE_BLOCK).key('#', (IItemProvider)Items.REDSTONE).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.REDSTONE_LAMP).key('R', (IItemProvider)Items.REDSTONE).key('G', (IItemProvider)Blocks.GLOWSTONE).patternLine(" R ").patternLine("RGR").patternLine(" R ").addCriterion("has_glowstone", this.hasItem((IItemProvider)Blocks.GLOWSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.REDSTONE_TORCH).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Items.REDSTONE).patternLine("X").patternLine("#").addCriterion("has_redstone", this.hasItem((IItemProvider)Items.REDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.RED_BANNER).key('#', (IItemProvider)Blocks.RED_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_red_wool", this.hasItem((IItemProvider)Blocks.RED_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.RED_BED).key('#', (IItemProvider)Blocks.RED_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_red_wool", this.hasItem((IItemProvider)Blocks.RED_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.RED_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.RED_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "red_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_CARPET, 3).key('#', (IItemProvider)Blocks.RED_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_red_wool", this.hasItem((IItemProvider)Blocks.RED_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.RED_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_red_dye", this.hasItem((IItemProvider)Items.RED_DYE)).build(p_200404_1_, "red_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.RED_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.RED_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.RED_DYE).addIngredient((IItemProvider)Items.BEETROOT).setGroup("red_dye").addCriterion("has_beetroot", this.hasItem((IItemProvider)Items.BEETROOT)).build(p_200404_1_, "red_dye_from_beetroot");
      ShapelessRecipeBuilder.shapelessRecipe(Items.RED_DYE).addIngredient((IItemProvider)Blocks.POPPY).setGroup("red_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.POPPY)).build(p_200404_1_, "red_dye_from_poppy");
      ShapelessRecipeBuilder.shapelessRecipe(Items.RED_DYE, 2).addIngredient((IItemProvider)Blocks.ROSE_BUSH).setGroup("red_dye").addCriterion("has_double_plant", this.hasItem((IItemProvider)Blocks.ROSE_BUSH)).build(p_200404_1_, "red_dye_from_rose_bush");
      ShapelessRecipeBuilder.shapelessRecipe(Items.RED_DYE).addIngredient((IItemProvider)Blocks.RED_TULIP).setGroup("red_dye").addCriterion("has_red_flower", this.hasItem((IItemProvider)Blocks.RED_TULIP)).build(p_200404_1_, "red_dye_from_tulip");
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_NETHER_BRICKS).key('W', (IItemProvider)Items.NETHER_WART).key('N', (IItemProvider)Items.NETHER_BRICK).patternLine("NW").patternLine("WN").addCriterion("has_nether_wart", this.hasItem((IItemProvider)Items.NETHER_WART)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_SANDSTONE).key('#', (IItemProvider)Blocks.RED_SAND).patternLine("##").patternLine("##").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.RED_SAND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_SANDSTONE_SLAB, 6).key('#', Ingredient.fromItems(Blocks.RED_SANDSTONE, Blocks.CHISELED_RED_SANDSTONE)).patternLine("###").addCriterion("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).addCriterion("has_chiseled_red_sandstone", this.hasItem((IItemProvider)Blocks.CHISELED_RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CUT_RED_SANDSTONE_SLAB, 6).key('#', (IItemProvider)Blocks.CUT_RED_SANDSTONE).patternLine("###").addCriterion("has_cut_red_sandstone", this.hasItem((IItemProvider)Blocks.CUT_RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_SANDSTONE_STAIRS, 4).key('#', Ingredient.fromItems(Blocks.RED_SANDSTONE, Blocks.CHISELED_RED_SANDSTONE, Blocks.CUT_RED_SANDSTONE)).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).addCriterion("has_chiseled_red_sandstone", this.hasItem((IItemProvider)Blocks.CHISELED_RED_SANDSTONE)).addCriterion("has_cut_red_sandstone", this.hasItem((IItemProvider)Blocks.CUT_RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.RED_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.RED_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.RED_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_red_dye", this.hasItem((IItemProvider)Items.RED_DYE)).build(p_200404_1_, "red_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.RED_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.RED_WOOL).addIngredient((IItemProvider)Items.RED_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.REPEATER).key('#', (IItemProvider)Blocks.REDSTONE_TORCH).key('X', (IItemProvider)Items.REDSTONE).key('I', (IItemProvider)Blocks.STONE).patternLine("#X#").patternLine("III").addCriterion("has_redstone_torch", this.hasItem((IItemProvider)Blocks.REDSTONE_TORCH)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SANDSTONE).key('#', (IItemProvider)Blocks.SAND).patternLine("##").patternLine("##").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SANDSTONE_SLAB, 6).key('#', Ingredient.fromItems(Blocks.SANDSTONE, Blocks.CHISELED_SANDSTONE)).patternLine("###").addCriterion("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).addCriterion("has_chiseled_sandstone", this.hasItem((IItemProvider)Blocks.CHISELED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CUT_SANDSTONE_SLAB, 6).key('#', (IItemProvider)Blocks.CUT_SANDSTONE).patternLine("###").addCriterion("has_cut_sandstone", this.hasItem((IItemProvider)Blocks.CUT_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SANDSTONE_STAIRS, 4).key('#', Ingredient.fromItems(Blocks.SANDSTONE, Blocks.CHISELED_SANDSTONE, Blocks.CUT_SANDSTONE)).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).addCriterion("has_chiseled_sandstone", this.hasItem((IItemProvider)Blocks.CHISELED_SANDSTONE)).addCriterion("has_cut_sandstone", this.hasItem((IItemProvider)Blocks.CUT_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SEA_LANTERN).key('S', (IItemProvider)Items.PRISMARINE_SHARD).key('C', (IItemProvider)Items.PRISMARINE_CRYSTALS).patternLine("SCS").patternLine("CCC").patternLine("SCS").addCriterion("has_prismarine_crystals", this.hasItem((IItemProvider)Items.PRISMARINE_CRYSTALS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.SHEARS).key('#', (IItemProvider)Items.IRON_INGOT).patternLine(" #").patternLine("# ").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.SHIELD).key('W', ItemTags.PLANKS).key('o', (IItemProvider)Items.IRON_INGOT).patternLine("WoW").patternLine("WWW").patternLine(" W ").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.OAK_SIGN, 3).key('#', (IItemProvider)Items.OAK_PLANKS).key('X', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" X ").addCriterion("has_oak_planks", this.hasItem((IItemProvider)Items.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.SPRUCE_SIGN, 3).key('#', (IItemProvider)Items.SPRUCE_PLANKS).key('X', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" X ").addCriterion("has_spruce_planks", this.hasItem((IItemProvider)Items.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.BIRCH_SIGN, 3).key('#', (IItemProvider)Items.BIRCH_PLANKS).key('X', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" X ").addCriterion("has_birch_planks", this.hasItem((IItemProvider)Items.BIRCH_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.ACACIA_SIGN, 3).key('#', (IItemProvider)Items.ACACIA_PLANKS).key('X', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" X ").addCriterion("has_acacia_planks", this.hasItem((IItemProvider)Items.ACACIA_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.JUNGLE_SIGN, 3).key('#', (IItemProvider)Items.JUNGLE_PLANKS).key('X', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" X ").addCriterion("has_jungle_planks", this.hasItem((IItemProvider)Items.JUNGLE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.DARK_OAK_SIGN, 3).key('#', (IItemProvider)Items.DARK_OAK_PLANKS).key('X', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" X ").addCriterion("has_dark_oak_planks", this.hasItem((IItemProvider)Items.DARK_OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SLIME_BLOCK).key('#', (IItemProvider)Items.SLIME_BALL).patternLine("###").patternLine("###").patternLine("###").addCriterion("has_slime_ball", this.hasItem((IItemProvider)Items.SLIME_BALL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.SLIME_BALL, 9).addIngredient((IItemProvider)Blocks.SLIME_BLOCK).addCriterion("has_slime", this.hasItem((IItemProvider)Blocks.SLIME_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CUT_RED_SANDSTONE, 4).key('#', (IItemProvider)Blocks.RED_SANDSTONE).patternLine("##").patternLine("##").addCriterion("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CUT_SANDSTONE, 4).key('#', (IItemProvider)Blocks.SANDSTONE).patternLine("##").patternLine("##").addCriterion("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SNOW_BLOCK).key('#', (IItemProvider)Items.SNOWBALL).patternLine("##").patternLine("##").addCriterion("has_snowball", this.hasItem((IItemProvider)Items.SNOWBALL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SNOW, 6).key('#', (IItemProvider)Blocks.SNOW_BLOCK).patternLine("###").addCriterion("has_snowball", this.hasItem((IItemProvider)Items.SNOWBALL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.GLISTERING_MELON_SLICE).key('#', (IItemProvider)Items.GOLD_NUGGET).key('X', (IItemProvider)Items.MELON_SLICE).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_melon", this.hasItem((IItemProvider)Items.MELON_SLICE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.SPECTRAL_ARROW, 2).key('#', (IItemProvider)Items.GLOWSTONE_DUST).key('X', (IItemProvider)Items.ARROW).patternLine(" # ").patternLine("#X#").patternLine(" # ").addCriterion("has_glowstone_dust", this.hasItem((IItemProvider)Items.GLOWSTONE_DUST)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_WOOD, 3).key('#', (IItemProvider)Blocks.SPRUCE_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.SPRUCE_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STRIPPED_SPRUCE_WOOD, 3).key('#', (IItemProvider)Blocks.STRIPPED_SPRUCE_LOG).patternLine("##").patternLine("##").setGroup("bark").addCriterion("has_log", this.hasItem((IItemProvider)Blocks.STRIPPED_SPRUCE_LOG)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.SPRUCE_BOAT).key('#', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("# #").patternLine("###").setGroup("boat").addCriterion("in_water", this.enteredBlock(Blocks.WATER)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.SPRUCE_BUTTON).addIngredient((IItemProvider)Blocks.SPRUCE_PLANKS).setGroup("wooden_button").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_DOOR, 3).key('#', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("##").patternLine("##").patternLine("##").setGroup("wooden_door").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_FENCE, 3).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("W#W").patternLine("W#W").setGroup("wooden_fence").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_FENCE_GATE).key('#', (IItemProvider)Items.STICK).key('W', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("#W#").patternLine("#W#").setGroup("wooden_fence_gate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.SPRUCE_PLANKS, 4).addIngredient(ItemTags.SPRUCE_LOGS).setGroup("planks").addCriterion("has_log", this.hasItem(ItemTags.SPRUCE_LOGS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("##").setGroup("wooden_pressure_plate").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_SLAB, 6).key('#', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("###").setGroup("wooden_slab").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_STAIRS, 4).key('#', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("#  ").patternLine("## ").patternLine("###").setGroup("wooden_stairs").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SPRUCE_TRAPDOOR, 2).key('#', (IItemProvider)Blocks.SPRUCE_PLANKS).patternLine("###").patternLine("###").setGroup("wooden_trapdoor").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.SPRUCE_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STICK, 4).key('#', ItemTags.PLANKS).patternLine("#").patternLine("#").setGroup("sticks").addCriterion("has_planks", this.hasItem(ItemTags.PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STICK, 1).key('#', (IItemProvider)Blocks.BAMBOO).patternLine("#").patternLine("#").setGroup("sticks").addCriterion("has_bamboo", this.hasItem((IItemProvider)Blocks.BAMBOO)).build(p_200404_1_, "stick_from_bamboo_item");
      ShapedRecipeBuilder.shapedRecipe(Blocks.STICKY_PISTON).key('P', (IItemProvider)Blocks.PISTON).key('S', (IItemProvider)Items.SLIME_BALL).patternLine("S").patternLine("P").addCriterion("has_slime_ball", this.hasItem((IItemProvider)Items.SLIME_BALL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_BRICKS, 4).key('#', (IItemProvider)Blocks.STONE).patternLine("##").patternLine("##").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STONE_AXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Blocks.COBBLESTONE).patternLine("XX").patternLine("X#").patternLine(" #").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.STONE_BRICKS).patternLine("###").addCriterion("has_stone_bricks", this.hasItem(ItemTags.STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.STONE_BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_stone_bricks", this.hasItem(ItemTags.STONE_BRICKS)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.STONE_BUTTON).addIngredient((IItemProvider)Blocks.STONE).addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STONE_HOE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Blocks.COBBLESTONE).patternLine("XX").patternLine(" #").patternLine(" #").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STONE_PICKAXE).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Blocks.COBBLESTONE).patternLine("XXX").patternLine(" # ").patternLine(" # ").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_PRESSURE_PLATE).key('#', (IItemProvider)Blocks.STONE).patternLine("##").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STONE_SHOVEL).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Blocks.COBBLESTONE).patternLine("X").patternLine("#").patternLine("#").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_SLAB, 6).key('#', (IItemProvider)Blocks.STONE).patternLine("###").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_STONE_SLAB, 6).key('#', (IItemProvider)Blocks.SMOOTH_STONE).patternLine("###").addCriterion("has_smooth_stone", this.hasItem((IItemProvider)Blocks.SMOOTH_STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.COBBLESTONE_STAIRS, 4).key('#', (IItemProvider)Blocks.COBBLESTONE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.STONE_SWORD).key('#', (IItemProvider)Items.STICK).key('X', (IItemProvider)Blocks.COBBLESTONE).patternLine("X").patternLine("X").patternLine("#").addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.WHITE_WOOL).key('#', (IItemProvider)Items.STRING).patternLine("##").patternLine("##").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).build(p_200404_1_, "white_wool_from_string");
      ShapelessRecipeBuilder.shapelessRecipe(Items.SUGAR).addIngredient((IItemProvider)Blocks.SUGAR_CANE).setGroup("sugar").addCriterion("has_reeds", this.hasItem((IItemProvider)Blocks.SUGAR_CANE)).build(p_200404_1_, "sugar_from_sugar_cane");
      ShapelessRecipeBuilder.shapelessRecipe(Items.SUGAR, 3).addIngredient((IItemProvider)Items.field_226638_pX_).setGroup("sugar").addCriterion("has_honey_bottle", this.hasItem((IItemProvider)Items.field_226638_pX_)).build(p_200404_1_, "sugar_from_honey_bottle");
      ShapedRecipeBuilder.shapedRecipe(Blocks.TNT).key('#', Ingredient.fromItems(Blocks.SAND, Blocks.RED_SAND)).key('X', (IItemProvider)Items.GUNPOWDER).patternLine("X#X").patternLine("#X#").patternLine("X#X").addCriterion("has_gunpowder", this.hasItem((IItemProvider)Items.GUNPOWDER)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.TNT_MINECART).key('A', (IItemProvider)Blocks.TNT).key('B', (IItemProvider)Items.MINECART).patternLine("A").patternLine("B").addCriterion("has_minecart", this.hasItem((IItemProvider)Items.MINECART)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.TORCH, 4).key('#', (IItemProvider)Items.STICK).key('X', Ingredient.fromItems(Items.COAL, Items.CHARCOAL)).patternLine("X").patternLine("#").addCriterion("has_stone_pickaxe", this.hasItem((IItemProvider)Items.STONE_PICKAXE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.LANTERN).key('#', (IItemProvider)Items.TORCH).key('X', (IItemProvider)Items.IRON_NUGGET).patternLine("XXX").patternLine("X#X").patternLine("XXX").addCriterion("has_iron_nugget", this.hasItem((IItemProvider)Items.IRON_NUGGET)).addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.TRAPPED_CHEST).addIngredient((IItemProvider)Blocks.CHEST).addIngredient((IItemProvider)Blocks.TRIPWIRE_HOOK).addCriterion("has_tripwire_hook", this.hasItem((IItemProvider)Blocks.TRIPWIRE_HOOK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.TRIPWIRE_HOOK, 2).key('#', ItemTags.PLANKS).key('S', (IItemProvider)Items.STICK).key('I', (IItemProvider)Items.IRON_INGOT).patternLine("I").patternLine("S").patternLine("#").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.TURTLE_HELMET).key('X', (IItemProvider)Items.SCUTE).patternLine("XXX").patternLine("X X").addCriterion("has_scute", this.hasItem((IItemProvider)Items.SCUTE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.WHEAT, 9).addIngredient((IItemProvider)Blocks.HAY_BLOCK).addCriterion("has_hay_block", this.hasItem((IItemProvider)Blocks.HAY_BLOCK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WHITE_BANNER).key('#', (IItemProvider)Blocks.WHITE_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WHITE_BED).key('#', (IItemProvider)Blocks.WHITE_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.WHITE_CARPET, 3).key('#', (IItemProvider)Blocks.WHITE_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.WHITE_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.WHITE_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.WHITE_DYE).addIngredient((IItemProvider)Items.BONE_MEAL).setGroup("white_dye").addCriterion("has_bone_meal", this.hasItem((IItemProvider)Items.BONE_MEAL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.WHITE_DYE).addIngredient((IItemProvider)Blocks.LILY_OF_THE_VALLEY).setGroup("white_dye").addCriterion("has_white_flower", this.hasItem((IItemProvider)Blocks.LILY_OF_THE_VALLEY)).build(p_200404_1_, "white_dye_from_lily_of_the_valley");
      ShapedRecipeBuilder.shapedRecipe(Blocks.WHITE_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.WHITE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.WHITE_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.WHITE_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.WHITE_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.WHITE_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_white_dye", this.hasItem((IItemProvider)Items.WHITE_DYE)).build(p_200404_1_, "white_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.WHITE_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.WHITE_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WOODEN_AXE).key('#', (IItemProvider)Items.STICK).key('X', ItemTags.PLANKS).patternLine("XX").patternLine("X#").patternLine(" #").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.OAK_DOOR, 3).key('#', (IItemProvider)Blocks.OAK_PLANKS).patternLine("##").patternLine("##").patternLine("##").setGroup("wooden_door").addCriterion("has_planks", this.hasItem((IItemProvider)Blocks.OAK_PLANKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WOODEN_HOE).key('#', (IItemProvider)Items.STICK).key('X', ItemTags.PLANKS).patternLine("XX").patternLine(" #").patternLine(" #").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WOODEN_PICKAXE).key('#', (IItemProvider)Items.STICK).key('X', ItemTags.PLANKS).patternLine("XXX").patternLine(" # ").patternLine(" # ").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WOODEN_SHOVEL).key('#', (IItemProvider)Items.STICK).key('X', ItemTags.PLANKS).patternLine("X").patternLine("#").patternLine("#").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.WOODEN_SWORD).key('#', (IItemProvider)Items.STICK).key('X', ItemTags.PLANKS).patternLine("X").patternLine("X").patternLine("#").addCriterion("has_stick", this.hasItem((IItemProvider)Items.STICK)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.WRITABLE_BOOK).addIngredient((IItemProvider)Items.BOOK).addIngredient((IItemProvider)Items.INK_SAC).addIngredient((IItemProvider)Items.FEATHER).addCriterion("has_book", this.hasItem((IItemProvider)Items.BOOK)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.YELLOW_BANNER).key('#', (IItemProvider)Blocks.YELLOW_WOOL).key('|', (IItemProvider)Items.STICK).patternLine("###").patternLine("###").patternLine(" | ").setGroup("banner").addCriterion("has_yellow_wool", this.hasItem((IItemProvider)Blocks.YELLOW_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Items.YELLOW_BED).key('#', (IItemProvider)Blocks.YELLOW_WOOL).key('X', ItemTags.PLANKS).patternLine("###").patternLine("XXX").setGroup("bed").addCriterion("has_yellow_wool", this.hasItem((IItemProvider)Blocks.YELLOW_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.YELLOW_BED).addIngredient((IItemProvider)Items.WHITE_BED).addIngredient((IItemProvider)Items.YELLOW_DYE).setGroup("dyed_bed").addCriterion("has_bed", this.hasItem((IItemProvider)Items.WHITE_BED)).build(p_200404_1_, "yellow_bed_from_white_bed");
      ShapedRecipeBuilder.shapedRecipe(Blocks.YELLOW_CARPET, 3).key('#', (IItemProvider)Blocks.YELLOW_WOOL).patternLine("##").setGroup("carpet").addCriterion("has_yellow_wool", this.hasItem((IItemProvider)Blocks.YELLOW_WOOL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.YELLOW_CARPET, 8).key('#', (IItemProvider)Blocks.WHITE_CARPET).key('$', (IItemProvider)Items.YELLOW_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("carpet").addCriterion("has_white_carpet", this.hasItem((IItemProvider)Blocks.WHITE_CARPET)).addCriterion("has_yellow_dye", this.hasItem((IItemProvider)Items.YELLOW_DYE)).build(p_200404_1_, "yellow_carpet_from_white_carpet");
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.YELLOW_CONCRETE_POWDER, 8).addIngredient((IItemProvider)Items.YELLOW_DYE).addIngredient((IItemProvider)Blocks.SAND, 4).addIngredient((IItemProvider)Blocks.GRAVEL, 4).setGroup("concrete_powder").addCriterion("has_sand", this.hasItem((IItemProvider)Blocks.SAND)).addCriterion("has_gravel", this.hasItem((IItemProvider)Blocks.GRAVEL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.YELLOW_DYE).addIngredient((IItemProvider)Blocks.DANDELION).setGroup("yellow_dye").addCriterion("has_yellow_flower", this.hasItem((IItemProvider)Blocks.DANDELION)).build(p_200404_1_, "yellow_dye_from_dandelion");
      ShapelessRecipeBuilder.shapelessRecipe(Items.YELLOW_DYE, 2).addIngredient((IItemProvider)Blocks.SUNFLOWER).setGroup("yellow_dye").addCriterion("has_double_plant", this.hasItem((IItemProvider)Blocks.SUNFLOWER)).build(p_200404_1_, "yellow_dye_from_sunflower");
      ShapedRecipeBuilder.shapedRecipe(Blocks.YELLOW_STAINED_GLASS, 8).key('#', (IItemProvider)Blocks.GLASS).key('X', (IItemProvider)Items.YELLOW_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_glass").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.YELLOW_STAINED_GLASS_PANE, 16).key('#', (IItemProvider)Blocks.YELLOW_STAINED_GLASS).patternLine("###").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass", this.hasItem((IItemProvider)Blocks.GLASS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.YELLOW_STAINED_GLASS_PANE, 8).key('#', (IItemProvider)Blocks.GLASS_PANE).key('$', (IItemProvider)Items.YELLOW_DYE).patternLine("###").patternLine("#$#").patternLine("###").setGroup("stained_glass_pane").addCriterion("has_glass_pane", this.hasItem((IItemProvider)Blocks.GLASS_PANE)).addCriterion("has_yellow_dye", this.hasItem((IItemProvider)Items.YELLOW_DYE)).build(p_200404_1_, "yellow_stained_glass_pane_from_glass_pane");
      ShapedRecipeBuilder.shapedRecipe(Blocks.YELLOW_TERRACOTTA, 8).key('#', (IItemProvider)Blocks.TERRACOTTA).key('X', (IItemProvider)Items.YELLOW_DYE).patternLine("###").patternLine("#X#").patternLine("###").setGroup("stained_terracotta").addCriterion("has_terracotta", this.hasItem((IItemProvider)Blocks.TERRACOTTA)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.YELLOW_WOOL).addIngredient((IItemProvider)Items.YELLOW_DYE).addIngredient((IItemProvider)Blocks.WHITE_WOOL).setGroup("wool").addCriterion("has_white_wool", this.hasItem((IItemProvider)Blocks.WHITE_WOOL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.DRIED_KELP, 9).addIngredient((IItemProvider)Blocks.DRIED_KELP_BLOCK).addCriterion("has_dried_kelp_block", this.hasItem((IItemProvider)Blocks.DRIED_KELP_BLOCK)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Blocks.DRIED_KELP_BLOCK).addIngredient((IItemProvider)Items.DRIED_KELP, 9).addCriterion("has_dried_kelp", this.hasItem((IItemProvider)Items.DRIED_KELP)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CONDUIT).key('#', (IItemProvider)Items.NAUTILUS_SHELL).key('X', (IItemProvider)Items.HEART_OF_THE_SEA).patternLine("###").patternLine("#X#").patternLine("###").addCriterion("has_nautilus_core", this.hasItem((IItemProvider)Items.HEART_OF_THE_SEA)).addCriterion("has_nautilus_shell", this.hasItem((IItemProvider)Items.NAUTILUS_SHELL)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_GRANITE_STAIRS, 4).key('#', (IItemProvider)Blocks.POLISHED_GRANITE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_polished_granite", this.hasItem((IItemProvider)Blocks.POLISHED_GRANITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_RED_SANDSTONE_STAIRS, 4).key('#', (IItemProvider)Blocks.SMOOTH_RED_SANDSTONE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_smooth_red_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MOSSY_STONE_BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.MOSSY_STONE_BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_mossy_stone_bricks", this.hasItem((IItemProvider)Blocks.MOSSY_STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_DIORITE_STAIRS, 4).key('#', (IItemProvider)Blocks.POLISHED_DIORITE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_polished_diorite", this.hasItem((IItemProvider)Blocks.POLISHED_DIORITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MOSSY_COBBLESTONE_STAIRS, 4).key('#', (IItemProvider)Blocks.MOSSY_COBBLESTONE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.END_STONE_BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.END_STONE_BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_end_stone_bricks", this.hasItem((IItemProvider)Blocks.END_STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_STAIRS, 4).key('#', (IItemProvider)Blocks.STONE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_SANDSTONE_STAIRS, 4).key('#', (IItemProvider)Blocks.SMOOTH_SANDSTONE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_smooth_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_QUARTZ_STAIRS, 4).key('#', (IItemProvider)Blocks.SMOOTH_QUARTZ).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_smooth_quartz", this.hasItem((IItemProvider)Blocks.SMOOTH_QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRANITE_STAIRS, 4).key('#', (IItemProvider)Blocks.GRANITE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ANDESITE_STAIRS, 4).key('#', (IItemProvider)Blocks.ANDESITE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_NETHER_BRICK_STAIRS, 4).key('#', (IItemProvider)Blocks.RED_NETHER_BRICKS).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_red_nether_bricks", this.hasItem((IItemProvider)Blocks.RED_NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_ANDESITE_STAIRS, 4).key('#', (IItemProvider)Blocks.POLISHED_ANDESITE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_polished_andesite", this.hasItem((IItemProvider)Blocks.POLISHED_ANDESITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DIORITE_STAIRS, 4).key('#', (IItemProvider)Blocks.DIORITE).patternLine("#  ").patternLine("## ").patternLine("###").addCriterion("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_GRANITE_SLAB, 6).key('#', (IItemProvider)Blocks.POLISHED_GRANITE).patternLine("###").addCriterion("has_polished_granite", this.hasItem((IItemProvider)Blocks.POLISHED_GRANITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_RED_SANDSTONE_SLAB, 6).key('#', (IItemProvider)Blocks.SMOOTH_RED_SANDSTONE).patternLine("###").addCriterion("has_smooth_red_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MOSSY_STONE_BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.MOSSY_STONE_BRICKS).patternLine("###").addCriterion("has_mossy_stone_bricks", this.hasItem((IItemProvider)Blocks.MOSSY_STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_DIORITE_SLAB, 6).key('#', (IItemProvider)Blocks.POLISHED_DIORITE).patternLine("###").addCriterion("has_polished_diorite", this.hasItem((IItemProvider)Blocks.POLISHED_DIORITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MOSSY_COBBLESTONE_SLAB, 6).key('#', (IItemProvider)Blocks.MOSSY_COBBLESTONE).patternLine("###").addCriterion("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.END_STONE_BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.END_STONE_BRICKS).patternLine("###").addCriterion("has_end_stone_bricks", this.hasItem((IItemProvider)Blocks.END_STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_SANDSTONE_SLAB, 6).key('#', (IItemProvider)Blocks.SMOOTH_SANDSTONE).patternLine("###").addCriterion("has_smooth_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOOTH_QUARTZ_SLAB, 6).key('#', (IItemProvider)Blocks.SMOOTH_QUARTZ).patternLine("###").addCriterion("has_smooth_quartz", this.hasItem((IItemProvider)Blocks.SMOOTH_QUARTZ)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRANITE_SLAB, 6).key('#', (IItemProvider)Blocks.GRANITE).patternLine("###").addCriterion("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ANDESITE_SLAB, 6).key('#', (IItemProvider)Blocks.ANDESITE).patternLine("###").addCriterion("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_NETHER_BRICK_SLAB, 6).key('#', (IItemProvider)Blocks.RED_NETHER_BRICKS).patternLine("###").addCriterion("has_red_nether_bricks", this.hasItem((IItemProvider)Blocks.RED_NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.POLISHED_ANDESITE_SLAB, 6).key('#', (IItemProvider)Blocks.POLISHED_ANDESITE).patternLine("###").addCriterion("has_polished_andesite", this.hasItem((IItemProvider)Blocks.POLISHED_ANDESITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DIORITE_SLAB, 6).key('#', (IItemProvider)Blocks.DIORITE).patternLine("###").addCriterion("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BRICK_WALL, 6).key('#', (IItemProvider)Blocks.BRICKS).patternLine("###").patternLine("###").addCriterion("has_bricks", this.hasItem((IItemProvider)Blocks.BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.PRISMARINE_WALL, 6).key('#', (IItemProvider)Blocks.PRISMARINE).patternLine("###").patternLine("###").addCriterion("has_prismarine", this.hasItem((IItemProvider)Blocks.PRISMARINE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_SANDSTONE_WALL, 6).key('#', (IItemProvider)Blocks.RED_SANDSTONE).patternLine("###").patternLine("###").addCriterion("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.MOSSY_STONE_BRICK_WALL, 6).key('#', (IItemProvider)Blocks.MOSSY_STONE_BRICKS).patternLine("###").patternLine("###").addCriterion("has_mossy_stone_bricks", this.hasItem((IItemProvider)Blocks.MOSSY_STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRANITE_WALL, 6).key('#', (IItemProvider)Blocks.GRANITE).patternLine("###").patternLine("###").addCriterion("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONE_BRICK_WALL, 6).key('#', (IItemProvider)Blocks.STONE_BRICKS).patternLine("###").patternLine("###").addCriterion("has_stone_bricks", this.hasItem((IItemProvider)Blocks.STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.NETHER_BRICK_WALL, 6).key('#', (IItemProvider)Blocks.NETHER_BRICKS).patternLine("###").patternLine("###").addCriterion("has_nether_bricks", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.ANDESITE_WALL, 6).key('#', (IItemProvider)Blocks.ANDESITE).patternLine("###").patternLine("###").addCriterion("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.RED_NETHER_BRICK_WALL, 6).key('#', (IItemProvider)Blocks.RED_NETHER_BRICKS).patternLine("###").patternLine("###").addCriterion("has_red_nether_bricks", this.hasItem((IItemProvider)Blocks.RED_NETHER_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SANDSTONE_WALL, 6).key('#', (IItemProvider)Blocks.SANDSTONE).patternLine("###").patternLine("###").addCriterion("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.END_STONE_BRICK_WALL, 6).key('#', (IItemProvider)Blocks.END_STONE_BRICKS).patternLine("###").patternLine("###").addCriterion("has_end_stone_bricks", this.hasItem((IItemProvider)Blocks.END_STONE_BRICKS)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.DIORITE_WALL, 6).key('#', (IItemProvider)Blocks.DIORITE).patternLine("###").patternLine("###").addCriterion("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.CREEPER_BANNER_PATTERN).addIngredient((IItemProvider)Items.PAPER).addIngredient((IItemProvider)Items.CREEPER_HEAD).addCriterion("has_creeper_head", this.hasItem((IItemProvider)Items.CREEPER_HEAD)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.SKULL_BANNER_PATTERN).addIngredient((IItemProvider)Items.PAPER).addIngredient((IItemProvider)Items.WITHER_SKELETON_SKULL).addCriterion("has_wither_skeleton_skull", this.hasItem((IItemProvider)Items.WITHER_SKELETON_SKULL)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.FLOWER_BANNER_PATTERN).addIngredient((IItemProvider)Items.PAPER).addIngredient((IItemProvider)Blocks.OXEYE_DAISY).addCriterion("has_oxeye_daisy", this.hasItem((IItemProvider)Blocks.OXEYE_DAISY)).build(p_200404_1_);
      ShapelessRecipeBuilder.shapelessRecipe(Items.MOJANG_BANNER_PATTERN).addIngredient((IItemProvider)Items.PAPER).addIngredient((IItemProvider)Items.ENCHANTED_GOLDEN_APPLE).addCriterion("has_enchanted_golden_apple", this.hasItem((IItemProvider)Items.ENCHANTED_GOLDEN_APPLE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SCAFFOLDING, 6).key('~', (IItemProvider)Items.STRING).key('I', (IItemProvider)Blocks.BAMBOO).patternLine("I~I").patternLine("I I").patternLine("I I").addCriterion("has_bamboo", this.hasItem((IItemProvider)Blocks.BAMBOO)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.GRINDSTONE).key('I', (IItemProvider)Items.STICK).key('-', (IItemProvider)Blocks.STONE_SLAB).key('#', ItemTags.PLANKS).patternLine("I-I").patternLine("# #").addCriterion("has_stone_slab", this.hasItem((IItemProvider)Blocks.STONE_SLAB)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.BLAST_FURNACE).key('#', (IItemProvider)Blocks.SMOOTH_STONE).key('X', (IItemProvider)Blocks.FURNACE).key('I', (IItemProvider)Items.IRON_INGOT).patternLine("III").patternLine("IXI").patternLine("###").addCriterion("has_smooth_stone", this.hasItem((IItemProvider)Blocks.SMOOTH_STONE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMOKER).key('#', ItemTags.LOGS).key('X', (IItemProvider)Blocks.FURNACE).patternLine(" # ").patternLine("#X#").patternLine(" # ").addCriterion("has_furnace", this.hasItem((IItemProvider)Blocks.FURNACE)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.CARTOGRAPHY_TABLE).key('#', ItemTags.PLANKS).key('@', (IItemProvider)Items.PAPER).patternLine("@@").patternLine("##").patternLine("##").addCriterion("has_string", this.hasItem((IItemProvider)Items.STRING)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.SMITHING_TABLE).key('#', ItemTags.PLANKS).key('@', (IItemProvider)Items.IRON_INGOT).patternLine("@@").patternLine("##").patternLine("##").addCriterion("has_iron_ingot", this.hasItem((IItemProvider)Items.IRON_INGOT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.FLETCHING_TABLE).key('#', ItemTags.PLANKS).key('@', (IItemProvider)Items.FLINT).patternLine("@@").patternLine("##").patternLine("##").addCriterion("has_flint", this.hasItem((IItemProvider)Items.FLINT)).build(p_200404_1_);
      ShapedRecipeBuilder.shapedRecipe(Blocks.STONECUTTER).key('I', (IItemProvider)Items.IRON_INGOT).key('#', (IItemProvider)Blocks.STONE).patternLine(" I ").patternLine("###").addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_ARMORDYE).build(p_200404_1_, "armor_dye");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_BANNERDUPLICATE).build(p_200404_1_, "banner_duplicate");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_BOOKCLONING).build(p_200404_1_, "book_cloning");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_FIREWORK_ROCKET).build(p_200404_1_, "firework_rocket");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_FIREWORK_STAR).build(p_200404_1_, "firework_star");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_FIREWORK_STAR_FADE).build(p_200404_1_, "firework_star_fade");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_MAPCLONING).build(p_200404_1_, "map_cloning");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_MAPEXTENDING).build(p_200404_1_, "map_extending");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.field_223550_o).build(p_200404_1_, "repair_item");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_SHIELD).build(p_200404_1_, "shield_decoration");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_SHULKERBOXCOLORING).build(p_200404_1_, "shulker_box_coloring");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_TIPPEDARROW).build(p_200404_1_, "tipped_arrow");
      CustomRecipeBuilder.func_218656_a(IRecipeSerializer.CRAFTING_SPECIAL_SUSPICIOUSSTEW).build(p_200404_1_, "suspicious_stew");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.POTATO), Items.BAKED_POTATO, 0.35F, 200).addCriterion("has_potato", this.hasItem((IItemProvider)Items.POTATO)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.CLAY_BALL), Items.BRICK, 0.3F, 200).addCriterion("has_clay_ball", this.hasItem((IItemProvider)Items.CLAY_BALL)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromTag(ItemTags.LOGS), Items.CHARCOAL, 0.15F, 200).addCriterion("has_log", this.hasItem(ItemTags.LOGS)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.CHORUS_FRUIT), Items.POPPED_CHORUS_FRUIT, 0.1F, 200).addCriterion("has_chorus_fruit", this.hasItem((IItemProvider)Items.CHORUS_FRUIT)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.COAL_ORE.asItem()), Items.COAL, 0.1F, 200).addCriterion("has_coal_ore", this.hasItem((IItemProvider)Blocks.COAL_ORE)).build(p_200404_1_, "coal_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.BEEF), Items.COOKED_BEEF, 0.35F, 200).addCriterion("has_beef", this.hasItem((IItemProvider)Items.BEEF)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.CHICKEN), Items.COOKED_CHICKEN, 0.35F, 200).addCriterion("has_chicken", this.hasItem((IItemProvider)Items.CHICKEN)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.COD), Items.COOKED_COD, 0.35F, 200).addCriterion("has_cod", this.hasItem((IItemProvider)Items.COD)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.KELP), Items.DRIED_KELP, 0.1F, 200).addCriterion("has_kelp", this.hasItem((IItemProvider)Blocks.KELP)).build(p_200404_1_, "dried_kelp_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.SALMON), Items.COOKED_SALMON, 0.35F, 200).addCriterion("has_salmon", this.hasItem((IItemProvider)Items.SALMON)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.MUTTON), Items.COOKED_MUTTON, 0.35F, 200).addCriterion("has_mutton", this.hasItem((IItemProvider)Items.MUTTON)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.PORKCHOP), Items.COOKED_PORKCHOP, 0.35F, 200).addCriterion("has_porkchop", this.hasItem((IItemProvider)Items.PORKCHOP)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.RABBIT), Items.COOKED_RABBIT, 0.35F, 200).addCriterion("has_rabbit", this.hasItem((IItemProvider)Items.RABBIT)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.DIAMOND_ORE.asItem()), Items.DIAMOND, 1.0F, 200).addCriterion("has_diamond_ore", this.hasItem((IItemProvider)Blocks.DIAMOND_ORE)).build(p_200404_1_, "diamond_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.LAPIS_ORE.asItem()), Items.LAPIS_LAZULI, 0.2F, 200).addCriterion("has_lapis_ore", this.hasItem((IItemProvider)Blocks.LAPIS_ORE)).build(p_200404_1_, "lapis_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.EMERALD_ORE.asItem()), Items.EMERALD, 1.0F, 200).addCriterion("has_emerald_ore", this.hasItem((IItemProvider)Blocks.EMERALD_ORE)).build(p_200404_1_, "emerald_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromTag(ItemTags.SAND), Blocks.GLASS.asItem(), 0.1F, 200).addCriterion("has_sand", this.hasItem(ItemTags.SAND)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.GOLD_ORE.asItem()), Items.GOLD_INGOT, 1.0F, 200).addCriterion("has_gold_ore", this.hasItem((IItemProvider)Blocks.GOLD_ORE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.SEA_PICKLE.asItem()), Items.LIME_DYE, 0.1F, 200).addCriterion("has_sea_pickle", this.hasItem((IItemProvider)Blocks.SEA_PICKLE)).build(p_200404_1_, "lime_dye_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.CACTUS.asItem()), Items.GREEN_DYE, 1.0F, 200).addCriterion("has_cactus", this.hasItem((IItemProvider)Blocks.CACTUS)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.GOLDEN_PICKAXE, Items.GOLDEN_SHOVEL, Items.GOLDEN_AXE, Items.GOLDEN_HOE, Items.GOLDEN_SWORD, Items.GOLDEN_HELMET, Items.GOLDEN_CHESTPLATE, Items.GOLDEN_LEGGINGS, Items.GOLDEN_BOOTS, Items.GOLDEN_HORSE_ARMOR), Items.GOLD_NUGGET, 0.1F, 200).addCriterion("has_golden_pickaxe", this.hasItem((IItemProvider)Items.GOLDEN_PICKAXE)).addCriterion("has_golden_shovel", this.hasItem((IItemProvider)Items.GOLDEN_SHOVEL)).addCriterion("has_golden_axe", this.hasItem((IItemProvider)Items.GOLDEN_AXE)).addCriterion("has_golden_hoe", this.hasItem((IItemProvider)Items.GOLDEN_HOE)).addCriterion("has_golden_sword", this.hasItem((IItemProvider)Items.GOLDEN_SWORD)).addCriterion("has_golden_helmet", this.hasItem((IItemProvider)Items.GOLDEN_HELMET)).addCriterion("has_golden_chestplate", this.hasItem((IItemProvider)Items.GOLDEN_CHESTPLATE)).addCriterion("has_golden_leggings", this.hasItem((IItemProvider)Items.GOLDEN_LEGGINGS)).addCriterion("has_golden_boots", this.hasItem((IItemProvider)Items.GOLDEN_BOOTS)).addCriterion("has_golden_horse_armor", this.hasItem((IItemProvider)Items.GOLDEN_HORSE_ARMOR)).build(p_200404_1_, "gold_nugget_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Items.IRON_PICKAXE, Items.IRON_SHOVEL, Items.IRON_AXE, Items.IRON_HOE, Items.IRON_SWORD, Items.IRON_HELMET, Items.IRON_CHESTPLATE, Items.IRON_LEGGINGS, Items.IRON_BOOTS, Items.IRON_HORSE_ARMOR, Items.CHAINMAIL_HELMET, Items.CHAINMAIL_CHESTPLATE, Items.CHAINMAIL_LEGGINGS, Items.CHAINMAIL_BOOTS), Items.IRON_NUGGET, 0.1F, 200).addCriterion("has_iron_pickaxe", this.hasItem((IItemProvider)Items.IRON_PICKAXE)).addCriterion("has_iron_shovel", this.hasItem((IItemProvider)Items.IRON_SHOVEL)).addCriterion("has_iron_axe", this.hasItem((IItemProvider)Items.IRON_AXE)).addCriterion("has_iron_hoe", this.hasItem((IItemProvider)Items.IRON_HOE)).addCriterion("has_iron_sword", this.hasItem((IItemProvider)Items.IRON_SWORD)).addCriterion("has_iron_helmet", this.hasItem((IItemProvider)Items.IRON_HELMET)).addCriterion("has_iron_chestplate", this.hasItem((IItemProvider)Items.IRON_CHESTPLATE)).addCriterion("has_iron_leggings", this.hasItem((IItemProvider)Items.IRON_LEGGINGS)).addCriterion("has_iron_boots", this.hasItem((IItemProvider)Items.IRON_BOOTS)).addCriterion("has_iron_horse_armor", this.hasItem((IItemProvider)Items.IRON_HORSE_ARMOR)).addCriterion("has_chainmail_helmet", this.hasItem((IItemProvider)Items.CHAINMAIL_HELMET)).addCriterion("has_chainmail_chestplate", this.hasItem((IItemProvider)Items.CHAINMAIL_CHESTPLATE)).addCriterion("has_chainmail_leggings", this.hasItem((IItemProvider)Items.CHAINMAIL_LEGGINGS)).addCriterion("has_chainmail_boots", this.hasItem((IItemProvider)Items.CHAINMAIL_BOOTS)).build(p_200404_1_, "iron_nugget_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.IRON_ORE.asItem()), Items.IRON_INGOT, 0.7F, 200).addCriterion("has_iron_ore", this.hasItem((IItemProvider)Blocks.IRON_ORE.asItem())).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.CLAY), Blocks.TERRACOTTA.asItem(), 0.35F, 200).addCriterion("has_clay_block", this.hasItem((IItemProvider)Blocks.CLAY)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.NETHERRACK), Items.NETHER_BRICK, 0.1F, 200).addCriterion("has_netherrack", this.hasItem((IItemProvider)Blocks.NETHERRACK)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.NETHER_QUARTZ_ORE), Items.QUARTZ, 0.2F, 200).addCriterion("has_nether_quartz_ore", this.hasItem((IItemProvider)Blocks.NETHER_QUARTZ_ORE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.REDSTONE_ORE), Items.REDSTONE, 0.7F, 200).addCriterion("has_redstone_ore", this.hasItem((IItemProvider)Blocks.REDSTONE_ORE)).build(p_200404_1_, "redstone_from_smelting");
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.WET_SPONGE), Blocks.SPONGE.asItem(), 0.15F, 200).addCriterion("has_wet_sponge", this.hasItem((IItemProvider)Blocks.WET_SPONGE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.COBBLESTONE), Blocks.STONE.asItem(), 0.1F, 200).addCriterion("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.STONE), Blocks.SMOOTH_STONE.asItem(), 0.1F, 200).addCriterion("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.SMOOTH_SANDSTONE.asItem(), 0.1F, 200).addCriterion("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.SMOOTH_RED_SANDSTONE.asItem(), 0.1F, 200).addCriterion("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.QUARTZ_BLOCK), Blocks.SMOOTH_QUARTZ.asItem(), 0.1F, 200).addCriterion("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.STONE_BRICKS), Blocks.CRACKED_STONE_BRICKS.asItem(), 0.1F, 200).addCriterion("has_stone_bricks", this.hasItem((IItemProvider)Blocks.STONE_BRICKS)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.BLACK_TERRACOTTA), Blocks.BLACK_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_black_terracotta", this.hasItem((IItemProvider)Blocks.BLACK_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.BLUE_TERRACOTTA), Blocks.BLUE_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_blue_terracotta", this.hasItem((IItemProvider)Blocks.BLUE_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.BROWN_TERRACOTTA), Blocks.BROWN_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_brown_terracotta", this.hasItem((IItemProvider)Blocks.BROWN_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.CYAN_TERRACOTTA), Blocks.CYAN_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_cyan_terracotta", this.hasItem((IItemProvider)Blocks.CYAN_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.GRAY_TERRACOTTA), Blocks.GRAY_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_gray_terracotta", this.hasItem((IItemProvider)Blocks.GRAY_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.GREEN_TERRACOTTA), Blocks.GREEN_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_green_terracotta", this.hasItem((IItemProvider)Blocks.GREEN_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.LIGHT_BLUE_TERRACOTTA), Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_light_blue_terracotta", this.hasItem((IItemProvider)Blocks.LIGHT_BLUE_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.LIGHT_GRAY_TERRACOTTA), Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_light_gray_terracotta", this.hasItem((IItemProvider)Blocks.LIGHT_GRAY_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.LIME_TERRACOTTA), Blocks.LIME_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_lime_terracotta", this.hasItem((IItemProvider)Blocks.LIME_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.MAGENTA_TERRACOTTA), Blocks.MAGENTA_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_magenta_terracotta", this.hasItem((IItemProvider)Blocks.MAGENTA_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.ORANGE_TERRACOTTA), Blocks.ORANGE_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_orange_terracotta", this.hasItem((IItemProvider)Blocks.ORANGE_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.PINK_TERRACOTTA), Blocks.PINK_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_pink_terracotta", this.hasItem((IItemProvider)Blocks.PINK_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.PURPLE_TERRACOTTA), Blocks.PURPLE_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_purple_terracotta", this.hasItem((IItemProvider)Blocks.PURPLE_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.RED_TERRACOTTA), Blocks.RED_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_red_terracotta", this.hasItem((IItemProvider)Blocks.RED_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.WHITE_TERRACOTTA), Blocks.WHITE_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_white_terracotta", this.hasItem((IItemProvider)Blocks.WHITE_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(Blocks.YELLOW_TERRACOTTA), Blocks.YELLOW_GLAZED_TERRACOTTA.asItem(), 0.1F, 200).addCriterion("has_yellow_terracotta", this.hasItem((IItemProvider)Blocks.YELLOW_TERRACOTTA)).build(p_200404_1_);
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.IRON_ORE.asItem()), Items.IRON_INGOT, 0.7F, 100).addCriterion("has_iron_ore", this.hasItem((IItemProvider)Blocks.IRON_ORE.asItem())).build(p_200404_1_, "iron_ingot_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.GOLD_ORE.asItem()), Items.GOLD_INGOT, 1.0F, 100).addCriterion("has_gold_ore", this.hasItem((IItemProvider)Blocks.GOLD_ORE)).build(p_200404_1_, "gold_ingot_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.DIAMOND_ORE.asItem()), Items.DIAMOND, 1.0F, 100).addCriterion("has_diamond_ore", this.hasItem((IItemProvider)Blocks.DIAMOND_ORE)).build(p_200404_1_, "diamond_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.LAPIS_ORE.asItem()), Items.LAPIS_LAZULI, 0.2F, 100).addCriterion("has_lapis_ore", this.hasItem((IItemProvider)Blocks.LAPIS_ORE)).build(p_200404_1_, "lapis_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.REDSTONE_ORE), Items.REDSTONE, 0.7F, 100).addCriterion("has_redstone_ore", this.hasItem((IItemProvider)Blocks.REDSTONE_ORE)).build(p_200404_1_, "redstone_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.COAL_ORE.asItem()), Items.COAL, 0.1F, 100).addCriterion("has_coal_ore", this.hasItem((IItemProvider)Blocks.COAL_ORE)).build(p_200404_1_, "coal_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.EMERALD_ORE.asItem()), Items.EMERALD, 1.0F, 100).addCriterion("has_emerald_ore", this.hasItem((IItemProvider)Blocks.EMERALD_ORE)).build(p_200404_1_, "emerald_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Blocks.NETHER_QUARTZ_ORE), Items.QUARTZ, 0.2F, 100).addCriterion("has_nether_quartz_ore", this.hasItem((IItemProvider)Blocks.NETHER_QUARTZ_ORE)).build(p_200404_1_, "quartz_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Items.GOLDEN_PICKAXE, Items.GOLDEN_SHOVEL, Items.GOLDEN_AXE, Items.GOLDEN_HOE, Items.GOLDEN_SWORD, Items.GOLDEN_HELMET, Items.GOLDEN_CHESTPLATE, Items.GOLDEN_LEGGINGS, Items.GOLDEN_BOOTS, Items.GOLDEN_HORSE_ARMOR), Items.GOLD_NUGGET, 0.1F, 100).addCriterion("has_golden_pickaxe", this.hasItem((IItemProvider)Items.GOLDEN_PICKAXE)).addCriterion("has_golden_shovel", this.hasItem((IItemProvider)Items.GOLDEN_SHOVEL)).addCriterion("has_golden_axe", this.hasItem((IItemProvider)Items.GOLDEN_AXE)).addCriterion("has_golden_hoe", this.hasItem((IItemProvider)Items.GOLDEN_HOE)).addCriterion("has_golden_sword", this.hasItem((IItemProvider)Items.GOLDEN_SWORD)).addCriterion("has_golden_helmet", this.hasItem((IItemProvider)Items.GOLDEN_HELMET)).addCriterion("has_golden_chestplate", this.hasItem((IItemProvider)Items.GOLDEN_CHESTPLATE)).addCriterion("has_golden_leggings", this.hasItem((IItemProvider)Items.GOLDEN_LEGGINGS)).addCriterion("has_golden_boots", this.hasItem((IItemProvider)Items.GOLDEN_BOOTS)).addCriterion("has_golden_horse_armor", this.hasItem((IItemProvider)Items.GOLDEN_HORSE_ARMOR)).build(p_200404_1_, "gold_nugget_from_blasting");
      CookingRecipeBuilder.blastingRecipe(Ingredient.fromItems(Items.IRON_PICKAXE, Items.IRON_SHOVEL, Items.IRON_AXE, Items.IRON_HOE, Items.IRON_SWORD, Items.IRON_HELMET, Items.IRON_CHESTPLATE, Items.IRON_LEGGINGS, Items.IRON_BOOTS, Items.IRON_HORSE_ARMOR, Items.CHAINMAIL_HELMET, Items.CHAINMAIL_CHESTPLATE, Items.CHAINMAIL_LEGGINGS, Items.CHAINMAIL_BOOTS), Items.IRON_NUGGET, 0.1F, 100).addCriterion("has_iron_pickaxe", this.hasItem((IItemProvider)Items.IRON_PICKAXE)).addCriterion("has_iron_shovel", this.hasItem((IItemProvider)Items.IRON_SHOVEL)).addCriterion("has_iron_axe", this.hasItem((IItemProvider)Items.IRON_AXE)).addCriterion("has_iron_hoe", this.hasItem((IItemProvider)Items.IRON_HOE)).addCriterion("has_iron_sword", this.hasItem((IItemProvider)Items.IRON_SWORD)).addCriterion("has_iron_helmet", this.hasItem((IItemProvider)Items.IRON_HELMET)).addCriterion("has_iron_chestplate", this.hasItem((IItemProvider)Items.IRON_CHESTPLATE)).addCriterion("has_iron_leggings", this.hasItem((IItemProvider)Items.IRON_LEGGINGS)).addCriterion("has_iron_boots", this.hasItem((IItemProvider)Items.IRON_BOOTS)).addCriterion("has_iron_horse_armor", this.hasItem((IItemProvider)Items.IRON_HORSE_ARMOR)).addCriterion("has_chainmail_helmet", this.hasItem((IItemProvider)Items.CHAINMAIL_HELMET)).addCriterion("has_chainmail_chestplate", this.hasItem((IItemProvider)Items.CHAINMAIL_CHESTPLATE)).addCriterion("has_chainmail_leggings", this.hasItem((IItemProvider)Items.CHAINMAIL_LEGGINGS)).addCriterion("has_chainmail_boots", this.hasItem((IItemProvider)Items.CHAINMAIL_BOOTS)).build(p_200404_1_, "iron_nugget_from_blasting");
      this.cookingRecipesForMethod(p_200404_1_, "smoking", IRecipeSerializer.SMOKING, 100);
      this.cookingRecipesForMethod(p_200404_1_, "campfire_cooking", IRecipeSerializer.CAMPFIRE_COOKING, 600);
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.STONE), Blocks.STONE_SLAB, 2).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "stone_slab_from_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE), Blocks.STONE_STAIRS).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "stone_stairs_from_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE), Blocks.STONE_BRICKS).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "stone_bricks_from_stone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.STONE), Blocks.STONE_BRICK_SLAB, 2).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "stone_brick_slab_from_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE), Blocks.STONE_BRICK_STAIRS).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "stone_brick_stairs_from_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE), Blocks.CHISELED_STONE_BRICKS).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "chiseled_stone_bricks_stone_from_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE), Blocks.STONE_BRICK_WALL).func_218643_a("has_stone", this.hasItem((IItemProvider)Blocks.STONE)).func_218645_a(p_200404_1_, "stone_brick_walls_from_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.CUT_SANDSTONE).func_218643_a("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "cut_sandstone_from_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.SANDSTONE_SLAB, 2).func_218643_a("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "sandstone_slab_from_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.CUT_SANDSTONE_SLAB, 2).func_218643_a("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "cut_sandstone_slab_from_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.CUT_SANDSTONE), Blocks.CUT_SANDSTONE_SLAB, 2).func_218643_a("has_cut_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "cut_sandstone_slab_from_cut_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.SANDSTONE_STAIRS).func_218643_a("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "sandstone_stairs_from_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.SANDSTONE_WALL).func_218643_a("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "sandstone_wall_from_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SANDSTONE), Blocks.CHISELED_SANDSTONE).func_218643_a("has_sandstone", this.hasItem((IItemProvider)Blocks.SANDSTONE)).func_218645_a(p_200404_1_, "chiseled_sandstone_from_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.CUT_RED_SANDSTONE).func_218643_a("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "cut_red_sandstone_from_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.RED_SANDSTONE_SLAB, 2).func_218643_a("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "red_sandstone_slab_from_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.CUT_RED_SANDSTONE_SLAB, 2).func_218643_a("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "cut_red_sandstone_slab_from_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.CUT_RED_SANDSTONE), Blocks.CUT_RED_SANDSTONE_SLAB, 2).func_218643_a("has_cut_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "cut_red_sandstone_slab_from_cut_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.RED_SANDSTONE_STAIRS).func_218643_a("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "red_sandstone_stairs_from_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.RED_SANDSTONE_WALL).func_218643_a("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "red_sandstone_wall_from_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.RED_SANDSTONE), Blocks.CHISELED_RED_SANDSTONE).func_218643_a("has_red_sandstone", this.hasItem((IItemProvider)Blocks.RED_SANDSTONE)).func_218645_a(p_200404_1_, "chiseled_red_sandstone_from_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.QUARTZ_BLOCK), Blocks.QUARTZ_SLAB, 2).func_218643_a("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).func_218645_a(p_200404_1_, "quartz_slab_from_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.QUARTZ_BLOCK), Blocks.QUARTZ_STAIRS).func_218643_a("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).func_218645_a(p_200404_1_, "quartz_stairs_from_quartz_block_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.QUARTZ_BLOCK), Blocks.QUARTZ_PILLAR).func_218643_a("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).func_218645_a(p_200404_1_, "quartz_pillar_from_quartz_block_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.QUARTZ_BLOCK), Blocks.CHISELED_QUARTZ_BLOCK).func_218643_a("has_quartz_block", this.hasItem((IItemProvider)Blocks.QUARTZ_BLOCK)).func_218645_a(p_200404_1_, "chiseled_quartz_block_from_quartz_block_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.COBBLESTONE), Blocks.COBBLESTONE_STAIRS).func_218643_a("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).func_218645_a(p_200404_1_, "cobblestone_stairs_from_cobblestone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.COBBLESTONE), Blocks.COBBLESTONE_SLAB, 2).func_218643_a("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).func_218645_a(p_200404_1_, "cobblestone_slab_from_cobblestone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.COBBLESTONE), Blocks.COBBLESTONE_WALL).func_218643_a("has_cobblestone", this.hasItem((IItemProvider)Blocks.COBBLESTONE)).func_218645_a(p_200404_1_, "cobblestone_wall_from_cobblestone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.STONE_BRICKS), Blocks.STONE_BRICK_SLAB, 2).func_218643_a("has_stone_bricks", this.hasItem((IItemProvider)Blocks.STONE_BRICKS)).func_218645_a(p_200404_1_, "stone_brick_slab_from_stone_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE_BRICKS), Blocks.STONE_BRICK_STAIRS).func_218643_a("has_stone_bricks", this.hasItem((IItemProvider)Blocks.STONE_BRICKS)).func_218645_a(p_200404_1_, "stone_brick_stairs_from_stone_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE_BRICKS), Blocks.STONE_BRICK_WALL).func_218643_a("has_stone_bricks", this.hasItem((IItemProvider)Blocks.STONE_BRICKS)).func_218645_a(p_200404_1_, "stone_brick_wall_from_stone_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.STONE_BRICKS), Blocks.CHISELED_STONE_BRICKS).func_218643_a("has_stone_bricks", this.hasItem((IItemProvider)Blocks.STONE_BRICKS)).func_218645_a(p_200404_1_, "chiseled_stone_bricks_from_stone_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.BRICKS), Blocks.BRICK_SLAB, 2).func_218643_a("has_bricks", this.hasItem((IItemProvider)Blocks.BRICKS)).func_218645_a(p_200404_1_, "brick_slab_from_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.BRICKS), Blocks.BRICK_STAIRS).func_218643_a("has_bricks", this.hasItem((IItemProvider)Blocks.BRICKS)).func_218645_a(p_200404_1_, "brick_stairs_from_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.BRICKS), Blocks.BRICK_WALL).func_218643_a("has_bricks", this.hasItem((IItemProvider)Blocks.BRICKS)).func_218645_a(p_200404_1_, "brick_wall_from_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.NETHER_BRICKS), Blocks.NETHER_BRICK_SLAB, 2).func_218643_a("has_nether_bricks", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).func_218645_a(p_200404_1_, "nether_brick_slab_from_nether_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.NETHER_BRICKS), Blocks.NETHER_BRICK_STAIRS).func_218643_a("has_nether_bricks", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).func_218645_a(p_200404_1_, "nether_brick_stairs_from_nether_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.NETHER_BRICKS), Blocks.NETHER_BRICK_WALL).func_218643_a("has_nether_bricks", this.hasItem((IItemProvider)Blocks.NETHER_BRICKS)).func_218645_a(p_200404_1_, "nether_brick_wall_from_nether_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.RED_NETHER_BRICKS), Blocks.RED_NETHER_BRICK_SLAB, 2).func_218643_a("has_nether_bricks", this.hasItem((IItemProvider)Blocks.RED_NETHER_BRICKS)).func_218645_a(p_200404_1_, "red_nether_brick_slab_from_red_nether_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.RED_NETHER_BRICKS), Blocks.RED_NETHER_BRICK_STAIRS).func_218643_a("has_nether_bricks", this.hasItem((IItemProvider)Blocks.RED_NETHER_BRICKS)).func_218645_a(p_200404_1_, "red_nether_brick_stairs_from_red_nether_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.RED_NETHER_BRICKS), Blocks.RED_NETHER_BRICK_WALL).func_218643_a("has_nether_bricks", this.hasItem((IItemProvider)Blocks.RED_NETHER_BRICKS)).func_218645_a(p_200404_1_, "red_nether_brick_wall_from_red_nether_bricks_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.PURPUR_BLOCK), Blocks.PURPUR_SLAB, 2).func_218643_a("has_purpur_block", this.hasItem((IItemProvider)Blocks.PURPUR_BLOCK)).func_218645_a(p_200404_1_, "purpur_slab_from_purpur_block_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.PURPUR_BLOCK), Blocks.PURPUR_STAIRS).func_218643_a("has_purpur_block", this.hasItem((IItemProvider)Blocks.PURPUR_BLOCK)).func_218645_a(p_200404_1_, "purpur_stairs_from_purpur_block_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.PURPUR_BLOCK), Blocks.PURPUR_PILLAR).func_218643_a("has_purpur_block", this.hasItem((IItemProvider)Blocks.PURPUR_BLOCK)).func_218645_a(p_200404_1_, "purpur_pillar_from_purpur_block_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.PRISMARINE), Blocks.PRISMARINE_SLAB, 2).func_218643_a("has_prismarine", this.hasItem((IItemProvider)Blocks.PRISMARINE)).func_218645_a(p_200404_1_, "prismarine_slab_from_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.PRISMARINE), Blocks.PRISMARINE_STAIRS).func_218643_a("has_prismarine", this.hasItem((IItemProvider)Blocks.PRISMARINE)).func_218645_a(p_200404_1_, "prismarine_stairs_from_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.PRISMARINE), Blocks.PRISMARINE_WALL).func_218643_a("has_prismarine", this.hasItem((IItemProvider)Blocks.PRISMARINE)).func_218645_a(p_200404_1_, "prismarine_wall_from_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.PRISMARINE_BRICKS), Blocks.PRISMARINE_BRICK_SLAB, 2).func_218643_a("has_prismarine_brick", this.hasItem((IItemProvider)Blocks.PRISMARINE_BRICKS)).func_218645_a(p_200404_1_, "prismarine_brick_slab_from_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.PRISMARINE_BRICKS), Blocks.PRISMARINE_BRICK_STAIRS).func_218643_a("has_prismarine_brick", this.hasItem((IItemProvider)Blocks.PRISMARINE_BRICKS)).func_218645_a(p_200404_1_, "prismarine_brick_stairs_from_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.DARK_PRISMARINE), Blocks.DARK_PRISMARINE_SLAB, 2).func_218643_a("has_dark_prismarine", this.hasItem((IItemProvider)Blocks.DARK_PRISMARINE)).func_218645_a(p_200404_1_, "dark_prismarine_slab_from_dark_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.DARK_PRISMARINE), Blocks.DARK_PRISMARINE_STAIRS).func_218643_a("has_dark_prismarine", this.hasItem((IItemProvider)Blocks.DARK_PRISMARINE)).func_218645_a(p_200404_1_, "dark_prismarine_stairs_from_dark_prismarine_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.ANDESITE), Blocks.ANDESITE_SLAB, 2).func_218643_a("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).func_218645_a(p_200404_1_, "andesite_slab_from_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.ANDESITE), Blocks.ANDESITE_STAIRS).func_218643_a("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).func_218645_a(p_200404_1_, "andesite_stairs_from_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.ANDESITE), Blocks.ANDESITE_WALL).func_218643_a("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).func_218645_a(p_200404_1_, "andesite_wall_from_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.ANDESITE), Blocks.POLISHED_ANDESITE).func_218643_a("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).func_218645_a(p_200404_1_, "polished_andesite_from_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.ANDESITE), Blocks.POLISHED_ANDESITE_SLAB, 2).func_218643_a("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).func_218645_a(p_200404_1_, "polished_andesite_slab_from_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.ANDESITE), Blocks.POLISHED_ANDESITE_STAIRS).func_218643_a("has_andesite", this.hasItem((IItemProvider)Blocks.ANDESITE)).func_218645_a(p_200404_1_, "polished_andesite_stairs_from_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.POLISHED_ANDESITE), Blocks.POLISHED_ANDESITE_SLAB, 2).func_218643_a("has_polished_andesite", this.hasItem((IItemProvider)Blocks.POLISHED_ANDESITE)).func_218645_a(p_200404_1_, "polished_andesite_slab_from_polished_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.POLISHED_ANDESITE), Blocks.POLISHED_ANDESITE_STAIRS).func_218643_a("has_polished_andesite", this.hasItem((IItemProvider)Blocks.POLISHED_ANDESITE)).func_218645_a(p_200404_1_, "polished_andesite_stairs_from_polished_andesite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.GRANITE), Blocks.GRANITE_SLAB, 2).func_218643_a("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).func_218645_a(p_200404_1_, "granite_slab_from_granite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.GRANITE), Blocks.GRANITE_STAIRS).func_218643_a("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).func_218645_a(p_200404_1_, "granite_stairs_from_granite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.GRANITE), Blocks.GRANITE_WALL).func_218643_a("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).func_218645_a(p_200404_1_, "granite_wall_from_granite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.GRANITE), Blocks.POLISHED_GRANITE).func_218643_a("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).func_218645_a(p_200404_1_, "polished_granite_from_granite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.GRANITE), Blocks.POLISHED_GRANITE_SLAB, 2).func_218643_a("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).func_218645_a(p_200404_1_, "polished_granite_slab_from_granite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.GRANITE), Blocks.POLISHED_GRANITE_STAIRS).func_218643_a("has_granite", this.hasItem((IItemProvider)Blocks.GRANITE)).func_218645_a(p_200404_1_, "polished_granite_stairs_from_granite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.POLISHED_GRANITE), Blocks.POLISHED_GRANITE_SLAB, 2).func_218643_a("has_polished_granite", this.hasItem((IItemProvider)Blocks.POLISHED_GRANITE)).func_218645_a(p_200404_1_, "polished_granite_slab_from_polished_granite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.POLISHED_GRANITE), Blocks.POLISHED_GRANITE_STAIRS).func_218643_a("has_polished_granite", this.hasItem((IItemProvider)Blocks.POLISHED_GRANITE)).func_218645_a(p_200404_1_, "polished_granite_stairs_from_polished_granite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.DIORITE), Blocks.DIORITE_SLAB, 2).func_218643_a("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).func_218645_a(p_200404_1_, "diorite_slab_from_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.DIORITE), Blocks.DIORITE_STAIRS).func_218643_a("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).func_218645_a(p_200404_1_, "diorite_stairs_from_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.DIORITE), Blocks.DIORITE_WALL).func_218643_a("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).func_218645_a(p_200404_1_, "diorite_wall_from_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.DIORITE), Blocks.POLISHED_DIORITE).func_218643_a("has_diorite", this.hasItem((IItemProvider)Blocks.DIORITE)).func_218645_a(p_200404_1_, "polished_diorite_from_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.DIORITE), Blocks.POLISHED_DIORITE_SLAB, 2).func_218643_a("has_diorite", this.hasItem((IItemProvider)Blocks.POLISHED_DIORITE)).func_218645_a(p_200404_1_, "polished_diorite_slab_from_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.DIORITE), Blocks.POLISHED_DIORITE_STAIRS).func_218643_a("has_diorite", this.hasItem((IItemProvider)Blocks.POLISHED_DIORITE)).func_218645_a(p_200404_1_, "polished_diorite_stairs_from_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.POLISHED_DIORITE), Blocks.POLISHED_DIORITE_SLAB, 2).func_218643_a("has_polished_diorite", this.hasItem((IItemProvider)Blocks.POLISHED_DIORITE)).func_218645_a(p_200404_1_, "polished_diorite_slab_from_polished_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.POLISHED_DIORITE), Blocks.POLISHED_DIORITE_STAIRS).func_218643_a("has_polished_diorite", this.hasItem((IItemProvider)Blocks.POLISHED_DIORITE)).func_218645_a(p_200404_1_, "polished_diorite_stairs_from_polished_diorite_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.MOSSY_STONE_BRICKS), Blocks.MOSSY_STONE_BRICK_SLAB, 2).func_218643_a("has_mossy_stone_bricks", this.hasItem((IItemProvider)Blocks.MOSSY_STONE_BRICKS)).func_218645_a(p_200404_1_, "mossy_stone_brick_slab_from_mossy_stone_brick_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.MOSSY_STONE_BRICKS), Blocks.MOSSY_STONE_BRICK_STAIRS).func_218643_a("has_mossy_stone_bricks", this.hasItem((IItemProvider)Blocks.MOSSY_STONE_BRICKS)).func_218645_a(p_200404_1_, "mossy_stone_brick_stairs_from_mossy_stone_brick_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.MOSSY_STONE_BRICKS), Blocks.MOSSY_STONE_BRICK_WALL).func_218643_a("has_mossy_stone_bricks", this.hasItem((IItemProvider)Blocks.MOSSY_STONE_BRICKS)).func_218645_a(p_200404_1_, "mossy_stone_brick_wall_from_mossy_stone_brick_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.MOSSY_COBBLESTONE), Blocks.MOSSY_COBBLESTONE_SLAB, 2).func_218643_a("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).func_218645_a(p_200404_1_, "mossy_cobblestone_slab_from_mossy_cobblestone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.MOSSY_COBBLESTONE), Blocks.MOSSY_COBBLESTONE_STAIRS).func_218643_a("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).func_218645_a(p_200404_1_, "mossy_cobblestone_stairs_from_mossy_cobblestone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.MOSSY_COBBLESTONE), Blocks.MOSSY_COBBLESTONE_WALL).func_218643_a("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.MOSSY_COBBLESTONE)).func_218645_a(p_200404_1_, "mossy_cobblestone_wall_from_mossy_cobblestone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.SMOOTH_SANDSTONE), Blocks.SMOOTH_SANDSTONE_SLAB, 2).func_218643_a("has_smooth_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_SANDSTONE)).func_218645_a(p_200404_1_, "smooth_sandstone_slab_from_smooth_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SMOOTH_SANDSTONE), Blocks.SMOOTH_SANDSTONE_STAIRS).func_218643_a("has_mossy_cobblestone", this.hasItem((IItemProvider)Blocks.SMOOTH_SANDSTONE)).func_218645_a(p_200404_1_, "smooth_sandstone_stairs_from_smooth_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.SMOOTH_RED_SANDSTONE), Blocks.SMOOTH_RED_SANDSTONE_SLAB, 2).func_218643_a("has_smooth_red_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_RED_SANDSTONE)).func_218645_a(p_200404_1_, "smooth_red_sandstone_slab_from_smooth_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SMOOTH_RED_SANDSTONE), Blocks.SMOOTH_RED_SANDSTONE_STAIRS).func_218643_a("has_smooth_red_sandstone", this.hasItem((IItemProvider)Blocks.SMOOTH_RED_SANDSTONE)).func_218645_a(p_200404_1_, "smooth_red_sandstone_stairs_from_smooth_red_sandstone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.SMOOTH_QUARTZ), Blocks.SMOOTH_QUARTZ_SLAB, 2).func_218643_a("has_smooth_quartz", this.hasItem((IItemProvider)Blocks.SMOOTH_QUARTZ)).func_218645_a(p_200404_1_, "smooth_quartz_slab_from_smooth_quartz_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.SMOOTH_QUARTZ), Blocks.SMOOTH_QUARTZ_STAIRS).func_218643_a("has_smooth_quartz", this.hasItem((IItemProvider)Blocks.SMOOTH_QUARTZ)).func_218645_a(p_200404_1_, "smooth_quartz_stairs_from_smooth_quartz_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.END_STONE_BRICKS), Blocks.END_STONE_BRICK_SLAB, 2).func_218643_a("has_end_stone_brick", this.hasItem((IItemProvider)Blocks.END_STONE_BRICKS)).func_218645_a(p_200404_1_, "end_stone_brick_slab_from_end_stone_brick_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.END_STONE_BRICKS), Blocks.END_STONE_BRICK_STAIRS).func_218643_a("has_end_stone_brick", this.hasItem((IItemProvider)Blocks.END_STONE_BRICKS)).func_218645_a(p_200404_1_, "end_stone_brick_stairs_from_end_stone_brick_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.END_STONE_BRICKS), Blocks.END_STONE_BRICK_WALL).func_218643_a("has_end_stone_brick", this.hasItem((IItemProvider)Blocks.END_STONE_BRICKS)).func_218645_a(p_200404_1_, "end_stone_brick_wall_from_end_stone_brick_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.END_STONE), Blocks.END_STONE_BRICKS).func_218643_a("has_end_stone", this.hasItem((IItemProvider)Blocks.END_STONE)).func_218645_a(p_200404_1_, "end_stone_bricks_from_end_stone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.END_STONE), Blocks.END_STONE_BRICK_SLAB, 2).func_218643_a("has_end_stone", this.hasItem((IItemProvider)Blocks.END_STONE)).func_218645_a(p_200404_1_, "end_stone_brick_slab_from_end_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.END_STONE), Blocks.END_STONE_BRICK_STAIRS).func_218643_a("has_end_stone", this.hasItem((IItemProvider)Blocks.END_STONE)).func_218645_a(p_200404_1_, "end_stone_brick_stairs_from_end_stone_stonecutting");
      SingleItemRecipeBuilder.func_218648_a(Ingredient.fromItems(Blocks.END_STONE), Blocks.END_STONE_BRICK_WALL).func_218643_a("has_end_stone", this.hasItem((IItemProvider)Blocks.END_STONE)).func_218645_a(p_200404_1_, "end_stone_brick_wall_from_end_stone_stonecutting");
      SingleItemRecipeBuilder.func_218644_a(Ingredient.fromItems(Blocks.SMOOTH_STONE), Blocks.SMOOTH_STONE_SLAB, 2).func_218643_a("has_smooth_stone", this.hasItem((IItemProvider)Blocks.SMOOTH_STONE)).func_218645_a(p_200404_1_, "smooth_stone_slab_from_smooth_stone_stonecutting");
   }

   private void cookingRecipesForMethod(Consumer<IFinishedRecipe> p_218445_1_, String p_218445_2_, CookingRecipeSerializer<?> p_218445_3_, int p_218445_4_) {
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.BEEF), Items.COOKED_BEEF, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_beef", this.hasItem((IItemProvider)Items.BEEF)).build(p_218445_1_, "cooked_beef_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.CHICKEN), Items.COOKED_CHICKEN, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_chicken", this.hasItem((IItemProvider)Items.CHICKEN)).build(p_218445_1_, "cooked_chicken_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.COD), Items.COOKED_COD, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_cod", this.hasItem((IItemProvider)Items.COD)).build(p_218445_1_, "cooked_cod_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Blocks.KELP), Items.DRIED_KELP, 0.1F, p_218445_4_, p_218445_3_).addCriterion("has_kelp", this.hasItem((IItemProvider)Blocks.KELP)).build(p_218445_1_, "dried_kelp_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.SALMON), Items.COOKED_SALMON, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_salmon", this.hasItem((IItemProvider)Items.SALMON)).build(p_218445_1_, "cooked_salmon_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.MUTTON), Items.COOKED_MUTTON, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_mutton", this.hasItem((IItemProvider)Items.MUTTON)).build(p_218445_1_, "cooked_mutton_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.PORKCHOP), Items.COOKED_PORKCHOP, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_porkchop", this.hasItem((IItemProvider)Items.PORKCHOP)).build(p_218445_1_, "cooked_porkchop_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.POTATO), Items.BAKED_POTATO, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_potato", this.hasItem((IItemProvider)Items.POTATO)).build(p_218445_1_, "baked_potato_from_" + p_218445_2_);
      CookingRecipeBuilder.cookingRecipe(Ingredient.fromItems(Items.RABBIT), Items.COOKED_RABBIT, 0.35F, p_218445_4_, p_218445_3_).addCriterion("has_rabbit", this.hasItem((IItemProvider)Items.RABBIT)).build(p_218445_1_, "cooked_rabbit_from_" + p_218445_2_);
   }

   protected EnterBlockTrigger.Instance enteredBlock(Block p_200407_1_) {
      return new EnterBlockTrigger.Instance(p_200407_1_, StatePropertiesPredicate.field_227178_a_);
   }

   protected InventoryChangeTrigger.Instance hasItem(IItemProvider p_200403_1_) {
      return this.hasItem(ItemPredicate.Builder.create().item(p_200403_1_).build());
   }

   protected InventoryChangeTrigger.Instance hasItem(Tag<Item> p_200409_1_) {
      return this.hasItem(ItemPredicate.Builder.create().tag(p_200409_1_).build());
   }

   protected InventoryChangeTrigger.Instance hasItem(ItemPredicate... p_200405_1_) {
      return new InventoryChangeTrigger.Instance(MinMaxBounds.IntBound.UNBOUNDED, MinMaxBounds.IntBound.UNBOUNDED, MinMaxBounds.IntBound.UNBOUNDED, p_200405_1_);
   }

   public String getName() {
      return "Recipes";
   }
}
